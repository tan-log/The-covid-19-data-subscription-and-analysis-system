import pandas as pd
import json
import tkinter as tk
from tkinter import filedialog
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from paho.mqtt import client as mqtt_client
from PyQt5.QtWidgets import QWidget, QHBoxLayout, QVBoxLayout, QPushButton, \
    QComboBox, QFrame, QTextEdit, QLabel, QListWidget, QListWidgetItem, QAbstractItemView
from PyQt5.QtGui import QIcon, QFont, QPixmap, QMovie
from PyQt5.QtCore import Qt, QSize, QPoint
from enum import Enum
from threading import Thread
from setting import Setting
from ui_func import set_button_style
continent_list={ "厄立特里亚":"非洲" ,  "巴拿马":"北美洲" ,  "塞浦路斯":"亚洲" ,  "卢旺达":"非洲" ,  "圣文森特和格林纳丁斯":"北美洲" ,  "阿尔巴尼亚":"欧洲" ,  "波黑":"欧洲" ,  "斯里兰卡":"亚洲" ,  "哥伦比亚":"南美洲" ,  "泰国":"亚洲" ,  "多哥":"非洲" ,  "法国":"欧洲" ,  "新西兰":"大洋洲" ,  "匈牙利":"欧洲" ,  "苏丹":"非洲" ,  "古巴":"北美洲" ,  "科索沃":"欧洲" ,  "巴巴多斯":"北美洲" ,  "黎巴嫩":"亚洲" ,  "乌克兰":"欧洲" ,  "荷兰加勒比地区":"南美洲" ,  "喀麦隆":"非洲" ,  "冈比亚":"非洲" ,  "安道尔":"欧洲" ,  "特立尼达和多巴哥":"北美洲" ,  "日本":"亚洲" ,  "萨尔瓦多":"北美洲" ,  "尼泊尔":"亚洲" ,  "乌拉圭":"南美洲" ,  "新加坡":"亚洲" ,  "意大利":"欧洲" ,  "斐济":"大洋洲" ,  "塞尔维亚":"欧洲"  ,  "阿塞拜疆":"亚洲" ,  "巴拉圭":"南美洲" ,  "佛得角":"非洲" ,  "英国（含北爱尔兰）":"欧洲" ,  "安圭拉":"北美洲"  ,  "巴林":"亚洲" ,  "苏里南":"南美洲" ,  "马耳他":"欧洲" ,  "关岛":"大洋洲" ,  "拉脱维亚":"欧洲" ,  "东帝汶":"亚洲" ,  "斯威士兰":"非洲" ,  "留尼旺":"非洲" ,  "印度":"亚洲" ,  "柬埔寨":"亚洲" ,  "圣巴泰勒米":"北美洲" ,  "也门共和国":"亚洲" ,  "海地":"北美洲" ,  "阿鲁巴":"南美洲" ,  "爱尔兰":"欧洲" ,  "库拉索岛":"北美洲" ,  "克罗地亚":"欧洲" ,  "利比里亚":"非洲" ,  "福克兰群岛":"南美洲" ,  "几内亚":"非洲" ,  "博茨瓦纳":"非洲" ,  "奥地利":"欧洲" ,  "美属维尔京群岛":"北美洲" ,  "圣马丁岛":"北美洲" ,  "安哥拉":"非洲" ,  "多米尼加":"北美洲" ,  "法罗群岛":"欧洲" ,  "开曼群岛":"北美洲" ,  "荷属圣马丁":"北美洲" ,  "圣多美和普林西比":"非洲" ,  "津巴布韦":"非洲" ,  "几内亚比绍":"非洲" ,  "巴哈马":"北美洲" ,  "冰岛":"欧洲" ,  "牙买加":"北美洲" ,  "俄罗斯":"欧洲" ,  "葡萄牙":"欧洲" ,  "印度尼西亚":"亚洲" ,  "白俄罗斯":"欧洲" ,  "中非共和国":"非洲" ,  "摩洛哥":"非洲" ,  "波多黎各":"北美洲" ,  "约旦":"亚洲" ,  "根西岛":"欧洲" ,  "莱索托":"非洲" ,  "英国":"欧洲" ,  "马来西亚":"亚洲" ,  "安提瓜和巴布达":"北美洲" ,  "阿鲁巴":"北美洲" ,  "纳米比亚":"非洲" ,  "直布罗陀":"欧洲" ,  "土耳其":"亚洲" ,  "毛里塔尼亚":"非洲" ,  "蒙古":"亚洲" ,  "刚果（布）":"非洲" ,  "乍得":"非洲" ,  "阿联酋":"亚洲" ,  "圣皮埃尔和密克隆群岛":"北美洲" ,  "墨西哥":"北美洲" ,  "巴布亚新几内亚":"大洋洲" ,  "留尼汪":"非洲" ,  "波兰":"欧洲" ,  "布隆迪共和国":"非洲" ,  "北爱尔兰":"欧洲" ,  "法属波利尼西亚":"大洋洲"  ,  "文莱":"亚洲" ,  "丹麦":"欧洲" ,  "塞内加尔":"非洲" ,  "莫桑比克":"非洲" ,  "尼加拉瓜":"北美洲" ,  "马里":"非洲" ,  "巴西":"南美洲" ,  "越南":"亚洲" ,  "捷克":"欧洲" ,  "阿曼":"亚洲" ,  "留尼汪":"亚洲" ,  "尼日利亚":"非洲" ,  "加纳":"非洲" ,  "希腊":"欧洲" ,  "智利":"南美洲" ,  "加拿大":"北美洲" ,  "立陶宛":"欧洲" ,  "利比亚":"非洲" ,  "埃塞俄比亚":"非洲" ,  "保加利亚":"欧洲" ,  "老挝":"亚洲" ,  "委内瑞拉":"南美洲" ,  "多米尼克":"北美洲" ,  "格鲁吉亚":"亚洲" ,  "英属维尔京群岛":"北美洲" ,  "秘鲁":"南美洲" ,  "菲律宾":"亚洲" ,  "列支敦士登":"欧洲" ,  "摩纳哥":"欧洲" ,  "突尼斯":"非洲" ,  "韩国":"亚洲" ,  "阿根廷":"南美洲" ,  "埃及":"非洲" ,  "蒙特塞拉特":"北美洲" ,  "圭亚那":"南美洲" ,  "法属圭亚那":"南美洲" ,  "比利时":"欧洲" ,  "百慕大":"北美洲" ,  "摩尔多瓦":"欧洲" ,  "瑞士":"欧洲" ,  "塞舌尔":"非洲" ,  "厄瓜多尔":"南美洲" ,  "新喀里多尼亚":"大洋洲" ,  "伊朗":"亚洲" ,  "北马其顿":"欧洲" ,  "索马里":"非洲"  ,  "孟加拉国":"亚洲" ,  "伊拉克":"亚洲" ,  "土库曼斯坦":"亚洲" ,  "洪都拉斯":"北美洲" ,  "马恩岛":"欧洲" ,  "瓜德罗普岛":"北美洲" ,  "马提尼克":"北美洲" ,  "泽西岛":"欧洲" ,  "尼日尔":"非洲" ,  "危地马拉":"北美洲" ,  "科摩罗":"非洲" ,  "乌干达":"非洲" ,  "刚果（金）":"非洲" ,  "美国":"北美洲" ,  "塞拉利昂":"非洲" ,  "伯利兹":"北美洲" ,  "巴拿马":"其他" ,  "至尊公主邮轮":"其他" ,  "贝宁":"非洲" ,  "赤道几内亚":"非洲" ,  "圣卢西亚":"北美洲" ,  "哥斯达黎加":"北美洲" ,  "马达加斯加":"非洲" ,  "格鲁吉亚":"欧洲" ,  "赞比亚共和国":"非洲" ,  "卢森堡":"欧洲" ,  "马约特":"非洲" ,  "坦桑尼亚":"非洲" ,  "缅甸":"亚洲" ,  "大不列颠及北爱尔兰联合王国":"欧洲" ,  "德国":"欧洲" ,  "芬兰":"欧洲" ,  "科威特":"亚洲" ,  "肯尼亚":"非洲" ,  "沙特阿拉伯":"亚洲" ,  "卡塔尔":"亚洲" ,  "巴勒斯坦":"亚洲" ,  "瑞典":"欧洲" ,  "中国":"亚洲" ,  "阿富汗":"亚洲" ,  "南苏丹":"非洲" ,  "梵蒂冈":"欧洲" ,  "圣卢西亚":"南美洲" ,  "以色列":"亚洲" ,  "钻石公主号邮轮":"其他" ,  "马拉维":"非洲" ,  "科特迪瓦":"非洲" ,  "特克斯和凯科斯群岛":"北美洲" ,  "不丹":"亚洲" ,  "吉尔吉斯斯坦":"亚洲" ,  "挪威":"欧洲" ,  "黑山":"欧洲" ,  "南非":"非洲" ,  "阿尔及利亚":"非洲" ,  "格陵兰":"北美洲" ,  "哈萨克斯坦":"亚洲" ,  "荷兰":"欧洲" ,  "斯洛文尼亚":"欧洲" ,  "罗马尼亚":"欧洲" ,  "关岛":"北美洲"   ,  "马尔代夫":"亚洲" ,  "斯洛伐克":"欧洲" ,  "爱沙尼亚":"欧洲" ,  "叙利亚":"亚洲" ,  "圣巴泰勒米岛":"北美洲" ,  "西班牙":"欧洲" ,  "圣其茨和尼维斯":"北美洲" ,  "玻利维亚":"南美洲" ,  "毛里求斯":"非洲" ,  "澳大利亚":"大洋洲" ,  "巴基斯坦":"亚洲" ,  "加蓬":"非洲" ,  "塔吉克斯坦":"亚洲" ,  "布基纳法索":"非洲" ,  "乌兹别克斯坦":"亚洲" ,  "圣马力诺":"欧洲" ,  "亚美尼亚":"亚洲" ,  "北马里亚纳群岛联邦":"大洋洲" ,  "格林那达":"北美洲" ,  "吉布提":"非洲" }
continent_list_E={
    "亚洲":"Asia",
    "非洲":"Africa",
    "欧洲":"Europe",
    "大洋洲":"Oceania",
    "北美洲":"North America",
    "南美洲":"South America",
}
country_list=[ "赞比亚共和国" ,  "韩国" ,  "伊拉克" ,  "圣其茨和尼维斯" ,  "海地" ,  "爱沙尼亚" ,  "突尼斯" ,  "阿塞拜疆" ,  "喀麦隆" ,  "苏里南" ,  "新西兰" ,  "卡塔尔" ,  "拉脱维亚" ,  "圣多美和普林西比" ,  "瑞典" ,  "圣文森特和格林纳丁斯" ,  "不丹" ,  "澳大利亚" ,  "巴布亚新几内亚" ,  "北马里亚纳群岛联邦" ,  "北马其顿" ,  "科威特" ,  "乌兹别克斯坦" ,  "博茨瓦纳" ,  "南苏丹" ,  "挪威" ,  "摩纳哥" ,  "哈萨克斯坦" ,  "荷兰加勒比地区" ,  "新喀里多尼亚" ,  "巴基斯坦" ,  "贝宁" ,  "马来西亚" ,  "钻石公主号邮轮" ,  "俄罗斯" ,  "塞浦路斯" ,  "加纳" ,  "萨尔瓦多" ,  "厄立特里亚" ,  "格陵兰" ,  "梵蒂冈" ,  "斐济" ,  "土耳其" ,  "意大利" ,  "英国（含北爱尔兰）" ,  "圣皮埃尔和密克隆群岛" ,  "巴拿马" ,  "索马里" ,  "保加利亚" ,  "也门共和国" ,  "特克斯和凯科斯群岛" ,  "希腊" ,  "黎巴嫩" ,  "卢旺达" ,  "塞尔维亚" ,  "西班牙" ,  "塞内加尔" ,  "多米尼加" ,  "巴拉圭" ,  "摩尔多瓦" ,  "约旦" ,  "巴巴多斯" ,  "肯尼亚" ,  "瑞士" ,  "苏丹" ,  "以色列" ,  "直布罗陀" ,  "印度" ,  "克罗地亚" ,  "圣马力诺" ,  "尼日尔" ,  "阿曼" ,  "库拉索岛" ,  "冰岛" ,  "马达加斯加" ,  "芬兰" ,  "法罗群岛" ,  "尼泊尔" ,  "中非共和国" ,  "法属波利尼西亚" ,  "利比亚" ,  "刚果（布）" ,  "阿尔巴尼亚" ,  "马拉维" ,  "吉尔吉斯斯坦" ,  "关岛" ,  "利比里亚" ,  "马耳他" ,  "法属圭亚那" ,  "塞拉利昂" ,  "黑山" ,  "泽西岛" ,  "摩洛哥" ,  "斯威士兰" ,  "斯里兰卡" ,  "荷兰" ,  "越南" ,  "波黑" ,  "莫桑比克" ,  "阿联酋" ,  "法国" ,  "奥地利" ,  "日本" ,  "葡萄牙" ,  "丹麦" ,  "波兰" ,  "尼加拉瓜" ,  "墨西哥" ,  "亚美尼亚" ,  "叙利亚" ,  "毛里塔尼亚" ,  "乌干达" ,  "南非" ,  "蒙古" ,  "巴西" ,  "根西岛" ,  "新加坡" ,  "荷属圣马丁" ,  "捷克" ,  "埃塞俄比亚" ,  "阿根廷" ,  "圣巴泰勒米岛" ,  "厄瓜多尔" ,  "至尊公主邮轮" ,  "科索沃" ,  "坦桑尼亚" ,  "哥斯达黎加" ,  "安哥拉" ,  "马恩岛" ,  "罗马尼亚" ,  "巴哈马" ,  "柬埔寨" ,  "秘鲁" ,  "马尔代夫" ,  "北爱尔兰" ,  "洪都拉斯" ,  "巴勒斯坦" ,  "多哥" ,  "圣卢西亚" ,  "波多黎各" ,  "安圭拉" ,  "格鲁吉亚" ,  "布基纳法索" ,  "伯利兹" ,  "印度尼西亚" ,  "留尼旺" ,  "立陶宛" ,  "危地马拉" ,  "英属维尔京群岛" ,  "东帝汶" ,  "圣巴泰勒米" ,  "斯洛文尼亚" ,  "安提瓜和巴布达" ,  "马提尼克" ,  "中国" ,  "百慕大" ,  "瓜德罗普岛" ,  "阿富汗" ,  "刚果（金）" ,  "尼日利亚" ,  "几内亚" ,  "爱尔兰" ,  "土库曼斯坦" ,  "几内亚比绍" ,  "格林那达" ,  "白俄罗斯" ,  "乌拉圭" ,  "加蓬" ,  "美属维尔京群岛" ,  "沙特阿拉伯" ,  "大不列颠及北爱尔兰联合王国" ,  "列支敦士登" ,  "科摩罗" ,  "津巴布韦" ,  "圭亚那" ,  "佛得角" ,  "安道尔" ,  "莱索托" ,  "蒙特塞拉特" ,  "留尼汪" ,  "卢森堡" ,  "塞舌尔" ,  "孟加拉国" ,  "赤道几内亚" ,  "马里" ,  "斯洛伐克" ,  "菲律宾" ,  "玻利维亚" ,  "加拿大" ,  "伊朗" ,  "阿鲁巴" ,  "美国" ,  "匈牙利" ,  "牙买加" ,  "开曼群岛" ,  "缅甸" ,  "德国" ,  "古巴" ,  "哥伦比亚" ,  "塔吉克斯坦" ,  "乍得" ,  "吉布提" ,  "阿尔及利亚" ,  "比利时" ,  "智利" ,  "埃及" ,  "文莱" ,  "泰国" ,  "马约特" ,  "福克兰群岛" ,  "布隆迪共和国" ,  "特立尼达和多巴哥" ,  "纳米比亚" ,  "巴林" ,  "多米尼克" ,  "冈比亚" ,  "委内瑞拉" ,  "英国" ,  "老挝" ,  "乌克兰" ,  "毛里求斯" ,  "科特迪瓦" ,  "圣马丁岛"]
country_list_E={
"伯利兹":"Belize" ,  "摩洛哥":"Morocco" ,  "毛里求斯":"Mauritius" ,  "委内瑞拉":"Venezuela" ,  "列支敦士登":"Liechtenstein" ,  "肯尼亚":"Kenya" ,  "印度":"India" ,  "塞浦路斯":"Cyprus" ,  "圣巴泰勒米岛":"nan" ,  "马提尼克":"Martinique" ,  "阿尔巴尼亚":"Albania" ,  "马恩岛":"Isle of Man" ,  "卡塔尔":"Qatar" ,  "古巴":"Cuba" ,  "尼日利亚":"Nigeria" ,  "约旦":"Jordan" ,  "坦桑尼亚":"Tanzania" ,  "法属波利尼西亚":"French Polynesia" ,  "洪都拉斯":"Honduras" ,  "阿鲁巴":"nan" ,  "利比里亚":"Liberia" ,  "马约特":"nan" ,  "特立尼达和多巴哥":"Trinidad and Tobago" ,  "法国":"France" ,  "哥伦比亚":"Colombia" ,  "美属维尔京群岛":"nan" ,  "安哥拉":"Angola" ,  "莫桑比克":"Mozambique" ,  "瓜德罗普岛":"nan" ,  "安圭拉":"nan" ,  "斯洛伐克":"Slovakia" ,  "阿富汗":"Afghanistan" ,  "利比亚":"Libya" ,  "格林那达":"nan" ,  "克罗地亚":"Croatia" ,  "马达加斯加":"Madagascar" ,  "乌克兰":"Ukraine" ,  "波黑":"Bosnia and Herzegovina" ,  "澳大利亚":"Australia" ,  "马来西亚":"Malaysia" ,  "摩纳哥":"Monaco" ,  "至尊公主邮轮":"Grand Princess" ,  "苏里南":"Suriname" ,  "英国（含北爱尔兰）":"United Kingdom" ,  "叙利亚":"Syria" ,  "塞舌尔":"Seychelles" ,  "埃塞俄比亚":"Ethiopia" ,  "北马其顿":"North Macedonia" ,  "科摩罗":"nan" ,  "乌兹别克斯坦":"Uzbekistan" ,  "墨西哥":"Mexico" ,  "留尼旺":"Reunion" ,  "伊朗":"Iran" ,  "芬兰":"Finland" ,  "黑山":"nan" ,  "意大利":"Italy" ,  "喀麦隆":"Cameroon" ,  "梵蒂冈":"Status Civitatis Vaticanae" ,  "赞比亚共和国":"nan" ,  "巴林":"Bahrain" ,  "巴基斯坦":"Pakistan" ,  "苏丹":"Sudan" ,  "牙买加":"Jamaica" ,  "新加坡":"Singapore" ,  "刚果（金）":"Democratic Republic of the Congo" ,  "沙特阿拉伯":"Saudi Arabia" ,  "尼加拉瓜":"Nicaragua" ,  "马拉维":"Malawi" ,  "留尼汪":"Reunion Island" ,  "厄瓜多尔":"Ecuador" ,  "阿尔及利亚":"Algeria" ,  "吉布提":"Djibouti" ,  "贝宁":"Benin" ,  "圣马丁岛":"Sint Maarten" ,  "格陵兰":"nan" ,  "福克兰群岛":"nan" ,  "刚果（布）":"nan" ,  "越南":"Vietnam" ,  "文莱":"Brunei" ,  "以色列":"Israel" ,  "百慕大":"nan" ,  "西班牙":"Spain" ,  "立陶宛":"Lithuania" ,  "津巴布韦":"Zimbabwe" ,  "塞内加尔":"Senegal" ,  "土库曼斯坦":"Turkmenistan" ,  "泰国":"Thailand" ,  "老挝":"Laos" ,  "马里":"Mali" ,  "新喀里多尼亚":"nan" ,  "巴西":"Brazil" ,  "几内亚比绍":"nan" ,  "尼日尔":"Niger" ,  "巴布亚新几内亚":"Papua New Cuinea" ,  "德国":"Germany" ,  "爱尔兰":"Ireland" ,  "巴拿马":"Panama" ,  "南苏丹":"nan" ,  "荷属圣马丁":"nan" ,  "格鲁吉亚":"Georgia" ,  "科索沃":"nan" ,  "海地":"Haiti" ,  "亚美尼亚":"Armenia" ,  "南非":"South Africa" ,  "圣巴泰勒米":"Saint Barthelemy" ,  "东帝汶":"nan" ,  "斯里兰卡":"SriLanka" ,  "蒙古":"Mongolia" ,  "瑞典":"Sweden" ,  "伊拉克":"Iraq" ,  "阿联酋":"United Arab Emirates" ,  "北爱尔兰":"Northern Ireland" ,  "厄立特里亚":"nan" ,  "卢旺达":"Republic of Rwanda" ,  "佛得角":"nan" ,  "韩国":"Korea" ,  "也门共和国":"nan" ,  "开曼群岛":"Cayman Is" ,  "葡萄牙":"Portugal" ,  "拉脱维亚":"Latvia" ,  "圣其茨和尼维斯":"nan" ,  "阿塞拜疆":"Azerbaijan" ,  "关岛":"Guam" ,  "博茨瓦纳":"Botswana" ,  "圣马力诺":"San Marino" ,  "塔吉克斯坦":"Tajikstan" ,  "比利时":"Belgium" ,  "巴巴多斯":"Barbados" ,  "加拿大":"Canada" ,  "钻石公主号邮轮":"Diamond Princess Cruise Ship" ,  "多哥":"Togo" ,  "安道尔":"Andorra" ,  "圣文森特和格林纳丁斯":"Saint Vincent and the Grenadines" ,  "新西兰":"New Zealand" ,  "多米尼加":"Dominican Republic" ,  "捷克":"Czech Republic" ,  "中国":"China" ,  "萨尔瓦多":"El Salvador" ,  "英属维尔京群岛":"nan" ,  "加纳":"Ghana" ,  "俄罗斯":"Russia" ,  "希腊":"Greece" ,  "中非共和国":"Central African Republic" ,  "秘鲁":"Peru" ,  "菲律宾":"Philippines" ,  "泽西岛":"Bailiwick of Jersey" ,  "丹麦":"Denmark" ,  "乌干达":"Uganda" ,  "荷兰加勒比地区":"nan" ,  "根西岛":"Guernsey" ,  "马耳他":"Malta" ,  "美国":"United States of America" ,  "索马里":"Somali" ,  "不丹":"Kingdom of Bhutan" ,  "莱索托":"Lesotho"  ,  "波多黎各":"Puerto Rico" ,  "冈比亚":"Gambia" ,  "冰岛":"Iceland" ,  "瑞士":"Switzerland" ,  "巴布亚新几内亚":"Papua New Guinea" ,  "巴哈马":"Bahamas" ,  "挪威":"Norway" ,  "保加利亚":"Bulgaria" ,  "奥地利":"Austria" ,  "斯威士兰":"Swaziland" ,  "智利":"Chile" ,  "赤道几内亚":"The Republic of Equatorial Guinea" ,  "蒙特塞拉特":"nan" ,  "法属圭亚那":"French Guiana" ,  "乍得":"Chad" ,  "荷兰":"Netherlands" ,  "尼泊尔":"Nepal" ,  "几内亚":"Guinea" ,  "布隆迪共和国":"nan" ,  "卢森堡":"Luxembourg" ,  "埃及":"Egypt" ,  "哈萨克斯坦":"Kazakhstan" ,  "哥斯达黎加":"Costa Rica" ,  "巴勒斯坦":"Palestine" ,  "摩尔多瓦":"Moldova" ,  "巴拉圭":"Paraguay" ,  "毛里塔尼亚":"The Islamic Republic of Mauritania" ,  "圣多美和普林西比":"Sao Tome and Principe" ,  "黎巴嫩":"Lebanon" ,  "马尔代夫":"Maldives" ,  "罗马尼亚":"Romania" ,  "印度尼西亚":"Indonesia" ,  "乌拉圭":"Uruguay" ,  "土耳其":"Turkey" ,  "危地马拉":"Guatemala" ,  "柬埔寨":"Kampuchea (Cambodia )" ,  "安提瓜和巴布达":"Antigua and Barbuda" ,  "英国":"United Kingdom" ,  "北马里亚纳群岛联邦":"nan" ,  "大不列颠及北爱尔兰联合王国":"United Kingdom of Great Britain and Ireland" ,  "匈牙利":"Hungary" ,  "纳米比亚":"Namibia" ,  "圣皮埃尔和密克隆群岛":"nan" ,  "波兰":"Poland" ,  "爱沙尼亚":"Estonia" ,  "特克斯和凯科斯群岛":"nan" ,  "阿根廷":"Argentina" ,  "塞拉利昂":"Sierra Leone" ,  "塞尔维亚":"Republic of Serbia" ,  "科威特":"Kuwait" ,  "日本":"Japan" ,  "斐济":"Fiji" ,  "科特迪瓦":"Ivory Coast" ,  "法罗群岛":"Faroe" ,  "布基纳法索":"Burkina Faso" ,  "阿曼":"Oman" ,  "白俄罗斯":"Belarus" ,  "库拉索岛":"nan" ,  "吉尔吉斯斯坦":"nan" ,  "圭亚那":"Guyana" ,  "圣卢西亚":"St.Lucia" ,  "加蓬":"Gabon" ,  "缅甸":"Burma" ,  "多米尼克":"nan" ,  "斯洛文尼亚":"Slovenia" ,  "直布罗陀":"Gibraltar" ,  "玻利维亚":"Bolivia" ,  "孟加拉国":"Bangladesh" ,  "突尼斯":"Tunisia"
}
province_list=["丹麦" ,  "马恩岛" ,  "北马里亚纳群岛联邦" ,  "关岛" ,  "尼泊尔" ,  "直布罗陀" ,  "美国" ,  "刚果（布）" ,  "爱沙尼亚" ,  "荷兰加勒比地区" ,  "马耳他" ,  "厄立特里亚" ,  "陕西省" ,  "乌干达" ,  "亚美尼亚" ,  "马达加斯加" ,  "几内亚比绍" ,  "老挝" ,  "留尼汪" ,  "广东省" ,  "吉布提" ,  "斯洛伐克" ,  "钻石公主号邮轮" ,  "瓜德罗普岛" ,  "保加利亚" ,  "江西省" ,  "山西省" ,  "布隆迪共和国" ,  "坦桑尼亚" ,  "安徽省" ,  "波兰" ,  "阿尔巴尼亚" ,  "厄瓜多尔" ,  "韩国" ,  "甘肃省" ,  "加纳" ,  "百慕大" ,  "叙利亚" ,  "刚果（金）" ,  "湖南省" ,  "肯尼亚" ,  "南非" ,  "阿根廷" ,  "开曼群岛" ,  "毛里塔尼亚" ,  "巴哈马" ,  "科特迪瓦" ,  "四川省" ,  "埃及" ,  "阿联酋" ,  "留尼旺" ,  "印度尼西亚" ,  "葡萄牙" ,  "山东省" ,  "尼加拉瓜" ,  "不丹" ,  "奥地利" ,  "新疆维吾尔自治区" ,  "美属维尔京群岛" ,  "圣文森特和格林纳丁斯" ,  "尼日尔" ,  "海地" ,  "突尼斯" ,  "卡塔尔" ,  "新加坡" ,  "梵蒂冈" ,  "冰岛" ,  "古巴" ,  "索马里" ,  "波多黎各" ,  "乌拉圭" ,  "西班牙" ,  "格陵兰" ,  "赞比亚共和国" ,  "德国" ,  "土库曼斯坦" ,  "塞舌尔" ,  "贵州省" ,  "格鲁吉亚" ,  "阿鲁巴" ,  "东帝汶" ,  "特克斯和凯科斯群岛" ,  "科摩罗" ,  "西藏自治区" ,  "乌克兰" ,  "利比里亚" ,  "马约特" ,  "利比亚" ,  "文莱" ,  "尼日利亚" ,  "圣巴泰勒米岛" ,  "加拿大" ,  "中国" ,  "澳门" ,  "泽西岛" ,  "摩洛哥" ,  "冈比亚" ,  "蒙特塞拉特" ,  "荷兰" ,  "北爱尔兰" ,  "根西岛" ,  "多米尼克" ,  "比利时" ,  "莫桑比克" ,  "荷属圣马丁" ,  "天津市" ,  "马来西亚" ,  "赤道几内亚" ,  "辽宁省" ,  "黎巴嫩" ,  "佛得角" ,  "多米尼加" ,  "挪威" ,  "印度" ,  "法属波利尼西亚" ,  "安圭拉" ,  "大不列颠及北爱尔兰联合王国" ,  "摩尔多瓦" ,  "广西壮族自治区" ,  "也门共和国" ,  "塔吉克斯坦" ,  "日本" ,  "卢森堡" ,  "哥斯达黎加" ,  "斯里兰卡" ,  "河北省" ,  "博茨瓦纳" ,  "列支敦士登" ,  "圣巴泰勒米" ,  "伊朗" ,  "法罗群岛" ,  "乌兹别克斯坦" ,  "巴拉圭" ,  "英国" ,  "约旦" ,  "纳米比亚" ,  "智利" ,  "台湾" ,  "香港" ,  "海南省" ,  "缅甸" ,  "哥伦比亚" ,  "苏里南" ,  "至尊公主邮轮" ,  "福建省" ,  "斯威士兰" ,  "北马其顿" ,  "巴林" ,  "摩纳哥" ,  "圣卢西亚" ,  "阿塞拜疆" ,  "河南省" ,  "瑞士" ,  "马拉维" ,  "菲律宾" ,  "沙特阿拉伯" ,  "浙江省" ,  "圭亚那" ,  "中非共和国" ,  "江苏省" ,  "克罗地亚" ,  "安提瓜和巴布达" ,  "罗马尼亚" ,  "拉脱维亚" ,  "马提尼克" ,  "南苏丹" ,  "北京市" ,  "津巴布韦" ,  "爱尔兰" ,  "澳大利亚" ,  "塞浦路斯" ,  "秘鲁" ,  "黑山" ,  "加蓬" ,  "吉林省" ,  "卢旺达" ,  "重庆市" ,  "云南省" ,  "几内亚" ,  "墨西哥" ,  "内蒙古自治区" ,  "巴基斯坦" ,  "圣皮埃尔和密克隆群岛" ,  "立陶宛" ,  "苏丹" ,  "法国" ,  "安道尔" ,  "莱索托" ,  "芬兰" ,  "阿尔及利亚" ,  "危地马拉" ,  "圣多美和普林西比" ,  "多哥" ,  "泰国" ,  "孟加拉国" ,  "福克兰群岛" ,  "希腊" ,  "马尔代夫" ,  "圣马丁岛" ,  "马里" ,  "圣其茨和尼维斯" ,  "阿富汗" ,  "蒙古" ,  "塞尔维亚" ,  "毛里求斯" ,  "捷克" ,  "哈萨克斯坦" ,  "玻利维亚" ,  "圣马力诺" ,  "科威特" ,  "特立尼达和多巴哥" ,  "青海省" ,  "英属维尔京群岛" ,  "安哥拉" ,  "牙买加" ,  "以色列" ,  "越南" ,  "瑞典" ,  "黑龙江省" ,  "俄罗斯" ,  "上海市" ,  "阿曼" ,  "伊拉克" ,  "白俄罗斯" ,  "湖北省" ,  "科索沃" ,  "巴布亚新几内亚" ,  "巴拿马" ,  "巴西" ,  "埃塞俄比亚" ,  "塞内加尔" ,  "新西兰" ,  "格林那达" ,  "吉尔吉斯斯坦" ,  "斯洛文尼亚" ,  "塞拉利昂" ,  "伯利兹" ,  "法属圭亚那" ,  "英国（含北爱尔兰）" ,  "匈牙利" ,  "宁夏回族自治区" ,  "布基纳法索" ,  "喀麦隆" ,  "洪都拉斯" ,  "贝宁" ,  "土耳其" ,  "委内瑞拉" ,  "乍得" ,  "巴勒斯坦" ,  "库拉索岛" ,  "斐济" ,  "波黑" ,  "意大利" ,  "萨尔瓦多" ,  "新喀里多尼亚" ,  "柬埔寨" ,  "巴巴多斯"]
province_list_E={
     "巴哈马":"Bahamas" ,  "塞内加尔":"Senegal" ,  "塔吉克斯坦":"Tajikstan" ,  "阿尔巴尼亚":"Albania" ,  "格陵兰":"nan" ,  "青海省":"Qinghai" ,  "利比里亚":"Liberia" ,  "库拉索岛":"nan" ,  "葡萄牙":"Portugal" ,  "马耳他":"Malta" ,  "罗马尼亚":"Romania" ,  "塞拉利昂":"Sierra Leone" ,  "尼日尔":"Niger" ,  "蒙特塞拉特":"nan" ,  "亚美尼亚":"Armenia" ,  "德国":"Germany" ,  "波黑":"Bosnia and Herzegovina" ,  "斯洛伐克":"Slovakia" ,  "内蒙古自治区":"Neimenggu" ,  "美国":"United States of America" ,  "委内瑞拉":"Venezuela" ,  "至尊公主邮轮":"Grand Princess" ,  "巴林":"Bahrain" ,  "肯尼亚":"Kenya" ,  "东帝汶":"nan" ,  "特克斯和凯科斯群岛":"nan" ,  "圣巴泰勒米岛":"nan" ,  "刚果（布）":"nan" ,  "以色列":"Israel" ,  "钻石公主号邮轮":"Diamond Princess Cruise Ship" ,  "英国":"United Kingdom" ,  "巴基斯坦":"Pakistan" ,  "伊拉克":"Iraq" ,  "北马其顿":"North Macedonia" ,  "阿根廷":"Argentina" ,  "科威特":"Kuwait" ,  "英国（含北爱尔兰）":"United Kingdom" ,  "斯里兰卡":"SriLanka" ,  "圣皮埃尔和密克隆群岛":"nan" ,  "也门共和国":"nan" ,  "江苏省":"Jiangsu" ,  "波兰":"Poland" ,  "上海市":"Shanghai" ,  "博茨瓦纳":"Botswana" ,  "马拉维":"Malawi" ,  "日本":"Japan" ,  "多米尼加":"Dominican Republic" ,  "香港":"Hongkong" ,  "江西省":"Jiangxi" ,  "大不列颠及北爱尔兰联合王国":"United Kingdom of Great Britain and Ireland" ,  "斐济":"Fiji" ,  "拉脱维亚":"Latvia" ,  "塞舌尔":"Seychelles" ,  "马来西亚":"Malaysia" ,  "吉布提":"Djibouti" ,  "希腊":"Greece" ,  "台湾":"Taiwan" ,  "英属维尔京群岛":"nan" ,  "安徽省":"Anhui" ,  "摩洛哥":"Morocco" ,  "苏丹":"Sudan" ,  "伊朗":"Iran" ,  "浙江省":"Zhejiang" ,  "澳门":"Macao" ,  "西藏自治区":"Xizang" ,  "重庆市":"Chongqing" ,  "赞比亚共和国":"nan" ,  "瑞士":"Switzerland" ,  "加蓬":"Gabon" ,  "比利时":"Belgium" ,  "瓜德罗普岛":"nan" ,  "印度尼西亚":"Indonesia" ,  "新西兰":"New Zealand" ,  "北爱尔兰":"Northern Ireland" ,  "加拿大":"Canada" ,  "荷属圣马丁":"nan" ,  "利比亚":"Libya" ,  "克罗地亚":"Croatia" ,  "巴布亚新几内亚":"Papua New Guinea" ,  "安哥拉":"Angola" ,  "丹麦":"Denmark" ,  "智利":"Chile" ,  "几内亚比绍":"nan" ,  "纳米比亚":"Namibia" ,  "福建省":"Fujian" ,  "山西省":"Shanxi" ,  "土库曼斯坦":"Turkmenistan" ,  "索马里":"Somali" ,  "黎巴嫩":"Lebanon" ,  "广东省":"Guangdong" ,  "圣卢西亚":"St.Lucia" ,  "留尼汪":"Reunion Island" ,  "沙特阿拉伯":"Saudi Arabia" ,  "乌兹别克斯坦":"Uzbekistan" ,  "白俄罗斯":"Belarus" ,  "圣多美和普林西比":"Sao Tome and Principe" ,  "刚果（金）":"Democratic Republic of the Congo" ,  "坦桑尼亚":"Tanzania" ,  "海地":"Haiti" ,  "泽西岛":"Bailiwick of Jersey" ,  "多米尼克":"nan" ,  "荷兰":"Netherlands" ,  "中国":"China" ,  "科索沃":"nan" ,  "莫桑比克":"Mozambique" ,  "云南省":"Yunnan" ,  "印度":"India" ,  "危地马拉":"Guatemala" ,  "巴勒斯坦":"Palestine" ,  "意大利":"Italy" ,  "瑞典":"Sweden" ,  "安圭拉":"nan" ,  "保加利亚":"Bulgaria" ,  "香港":"Hong Kong" ,  "新疆维吾尔自治区":"Xinjiang" ,  "乌干达":"Uganda" ,  "黑山":"nan" ,  "马恩岛":"Isle of Man" ,  "老挝":"Laos" ,  "天津市":"Tianjin" ,  "厄瓜多尔":"Ecuador" ,  "阿曼":"Oman" ,  "吉尔吉斯斯坦":"nan" ,  "北马里亚纳群岛联邦":"nan" ,  "乍得":"Chad" ,  "立陶宛":"Lithuania" ,  "巴拿马":"Panama" ,  "特立尼达和多巴哥":"Trinidad and Tobago" ,  "陕西省":"Shaanxi" ,  "留尼旺":"Reunion" ,  "关岛":"Guam" ,  "洪都拉斯":"Honduras" ,  "毛里塔尼亚":"The Islamic Republic of Mauritania" ,  "海南省":"Hainan" ,  "多哥":"Togo" ,  "蒙古":"Mongolia" ,  "伯利兹":"Belize" ,  "冈比亚":"Gambia" ,  "辽宁省":"Liaoning" ,  "阿联酋":"United Arab Emirates" ,  "摩尔多瓦":"Moldova" ,  "马约特":"nan" ,  "韩国":"Korea" ,  "法属圭亚那":"French Guiana" ,  "吉林省":"Jilin" ,  "突尼斯":"Tunisia" ,  "柬埔寨":"Kampuchea (Cambodia )" ,  "埃塞俄比亚":"Ethiopia" ,  "尼加拉瓜":"Nicaragua" ,  "河北省":"Hebei" ,  "芬兰":"Finland" ,  "几内亚":"Guinea" ,  "马提尼克":"Martinique" ,  "文莱":"Brunei" ,  "河南省":"Henan" ,  "约旦":"Jordan" ,  "巴西":"Brazil" ,  "法属波利尼西亚":"French Polynesia" ,  "贝宁":"Benin" ,  "巴拉圭":"Paraguay" ,  "摩纳哥":"Monaco" ,  "加纳":"Ghana" ,  "梵蒂冈":"Status Civitatis Vaticanae" ,  "乌克兰":"Ukraine" ,  "圣马丁岛":"Sint Maarten" ,  "冰岛":"Iceland" ,  "卡塔尔":"Qatar" ,  "奥地利":"Austria" ,  "卢旺达":"Republic of Rwanda" ,  "荷兰加勒比地区":"nan" ,  "南苏丹":"nan" ,  "斯威士兰":"Swaziland" ,  "四川省":"Sichuan" ,  "越南":"Vietnam" ,  "安提瓜和巴布达":"Antigua and Barbuda" ,  "马尔代夫":"Maldives" ,  "科摩罗":"nan" ,  "哥斯达黎加":"Costa Rica" ,  "不丹":"Kingdom of Bhutan" ,  "新喀里多尼亚":"nan" ,  "山东省":"Shandong" ,  "泰国":"Thailand" ,  "赤道几内亚":"The Republic of Equatorial Guinea" ,  "秘鲁":"Peru" ,  "牙买加":"Jamaica" ,  "墨西哥":"Mexico" ,  "卢森堡":"Luxembourg" ,  "圣巴泰勒米":"Saint Barthelemy" ,  "埃及":"Egypt" ,  "湖南省":"Hunan" ,  "圭亚那":"Guyana" ,  "南非":"South Africa" ,  "格林那达":"nan" ,  "土耳其":"Turkey" ,  "圣马力诺":"San Marino" ,  "菲律宾":"Philippines" ,  "俄罗斯":"Russia" ,  "新加坡":"Singapore" ,  "开曼群岛":"Cayman Is" ,  "宁夏回族自治区":"Ningxia" ,  "美属维尔京群岛":"nan" ,  "布基纳法索":"Burkina Faso" ,  "巴巴多斯":"Barbados" ,  "津巴布韦":"Zimbabwe" ,  "苏里南":"Suriname" ,  "爱尔兰":"Ireland" ,  "布隆迪共和国":"nan" ,  "佛得角":"nan" ,  "法国":"France" ,  "捷克":"Czech Republic" ,  "安道尔":"Andorra" ,  "马里":"Mali" ,  "百慕大":"nan" ,  "玻利维亚":"Bolivia" ,  "贵州省":"Guizhou" ,  "福克兰群岛":"nan" ,  "挪威":"Norway" ,  "圣文森特和格林纳丁斯":"Saint Vincent and the Grenadines" ,  "叙利亚":"Syria" ,  "西班牙":"Spain" ,  "古巴":"Cuba" ,  "孟加拉国":"Bangladesh" ,  "列支敦士登":"Liechtenstein" ,  "根西岛":"Guernsey" ,  "波多黎各":"Puerto Rico" ,  "塞尔维亚":"Republic of Serbia" ,  "阿尔及利亚":"Algeria" ,  "圣其茨和尼维斯":"nan" ,  "阿鲁巴":"nan" ,  "黑龙江省":"Heilongjiang" ,  "澳门":"Macau" ,  "科特迪瓦":"Ivory Coast" ,  "乌拉圭":"Uruguay" ,  "匈牙利":"Hungary" ,  "阿塞拜疆":"Azerbaijan" ,  "塞浦路斯":"Cyprus" ,  "尼泊尔":"Nepal" ,  "萨尔瓦多":"El Salvador" ,  "马达加斯加":"Madagascar" ,  "直布罗陀":"Gibraltar" ,  "北京市":"Beijing" ,  "阿富汗":"Afghanistan" ,  "巴布亚新几内亚":"Papua New Cuinea" ,  "斯洛文尼亚":"Slovenia" ,  "喀麦隆":"Cameroon" ,  "格鲁吉亚":"Georgia" ,  "哥伦比亚":"Colombia" ,  "尼日利亚":"Nigeria" ,  "中非共和国":"Central African Republic" ,  "广西壮族自治区":"Guangxi" ,  "莱索托":"Lesotho" ,  "哈萨克斯坦":"Kazakhstan" ,  "法罗群岛":"Faroe" ,  "厄立特里亚":"nan" ,  "甘肃省":"Gansu" ,  "湖北省":"Hubei" ,  "澳大利亚":"Australia" ,  "爱沙尼亚":"Estonia" ,  "缅甸":"Burma" ,  "毛里求斯":"Mauritius"
}
province_zipCode={ "乌干达":"985010" ,  "刚果（金）":"0" ,  "新喀里多尼亚":"0" ,  "卢旺达":"985006" ,  "法国":"961002" ,  "菲律宾":"952008" ,  "陕西省":"610000" ,  "纳米比亚":"984009" ,  "圣多美和普林西比":"983007" ,  "委内瑞拉":"0" ,  "挪威":"962004" ,  "索马里":"985008" ,  "冈比亚":"982005" ,  "拉脱维亚":"964003" ,  "牙买加":"974009" ,  "北马其顿":"0" ,  "阿鲁巴":"0" ,  "湖南省":"430000" ,  "梵蒂冈":"965017" ,  "荷兰":"961006" ,  "阿尔及利亚":"981001" ,  "赞比亚共和国":"0" ,  "伊朗":"955007" ,  "冰岛":"962003" ,  "圣巴泰勒米":"0" ,  "危地马拉":"972004" ,  "厄瓜多尔":"973006" ,  "古巴":"974004" ,  "巴林":"955004" ,  "海南省":"460000" ,  "留尼汪":"0" ,  "越南":"952011" ,  "肯尼亚":"985005" ,  "马拉维":"984006" ,  "新西兰":"990007" ,  "加拿大":"971001" ,  "特立尼达和多巴哥":"974013" ,  "马里":"982010" ,  "巴哈马":"974002" ,  "乌兹别克斯坦":"954005" ,  "马达加斯加":"984005" ,  "布基纳法索":"982002" ,  "阿曼":"955013" ,  "津巴布韦":"984013" ,  "喀麦隆":"983001" ,  "安圭拉":"0" ,  "宁夏回族自治区":"640000" ,  "匈牙利":"963004" ,  "黑山":"965018" ,  "圭亚那":"973007" ,  "利比亚":"981003" ,  "加纳":"982006" ,  "墨西哥":"971003" ,  "斐济":"990002" ,  "秘鲁":"973008" ,  "坦桑尼亚":"985009" ,  "印度尼西亚":"952005" ,  "瑞典":"962005" ,  "钻石公主号邮轮":"0" ,  "大不列颠及北爱尔兰联合王国":"0" ,  "留尼旺":"0" ,  "澳大利亚":"990001" ,  "摩尔多瓦":"964005" ,  "芬兰":"962002" ,  "捷克":"963002" ,  "南苏丹":"981007" ,  "浙江省":"330000" ,  "库拉索岛":"0" ,  "刚果（布）":"0" ,  "阿联酋":"955019" ,  "吉林省":"220000" ,  "哥伦比亚":"973005" ,  "中国":"951001" ,  "台湾":"710000" ,  "安道尔":"965002" ,  "阿富汗":"955001" ,  "几内亚比绍":"982008" ,  "缅甸":"952001" ,  "希腊":"965007" ,  "摩纳哥":"961005" ,  "上海市":"310000" ,  "巴巴多斯":"974003" ,  "法属波利尼西亚":"0" ,  "文莱":"952002" ,  "贝宁":"982001" ,  "格林那达":"0" ,  "新疆维吾尔自治区":"650000" ,  "瑞士":"963008" ,  "约旦":"955010" ,  "莱索托":"984004" ,  "西藏自治区":"540000" ,  "哥斯达黎加":"972002" ,  "洪都拉斯":"972005" ,  "乍得":"982003" ,  "罗马尼亚":"965011" ,  "埃及":"981002" ,  "蒙古":"0" ,  "山东省":"370000" ,  "卢森堡":"961004" ,  "圣马力诺":"965012" ,  "利比里亚":"982009" ,  "叙利亚":"955017" ,  "圣其茨和尼维斯":"0" ,  "奥地利":"963001" ,  "美国":"971002" ,  "加蓬":"983004" ,  "辽宁省":"210000" ,  "玻利维亚":"973002" ,  "圣马丁岛":"0" ,  "科索沃":"0" ,  "内蒙古自治区":"150000" ,  "葡萄牙":"965010" ,  "阿根廷":"973001" ,  "马耳他":"965019" ,  "伯利兹":"972001" ,  "埃塞俄比亚":"985004" ,  "塞内加尔":"982014" ,  "北京市":"110000" ,  "香港":"810000" ,  "莫桑比克":"984008" ,  "摩洛哥":"981004" ,  "亚美尼亚":"955002" ,  "多哥":"982016" ,  "尼日尔":"982011" ,  "根西岛":"0" ,  "博茨瓦纳":"984002" ,  "塞舌尔":"985007" ,  "巴勒斯坦":"955014" ,  "吉尔吉斯斯坦":"954002" ,  "蒙特塞拉特":"0" ,  "巴基斯坦":"953006" ,  "赤道几内亚":"0" ,  "苏里南":"973010" ,  "特克斯和凯科斯群岛":"0" ,  "波多黎各":"0" ,  "科摩罗":"984003" ,  "东帝汶":"952004" ,  "百慕大":"0" ,  "甘肃省":"620000" ,  "阿尔巴尼亚":"965001" ,  "乌克兰":"964007" ,  "巴布亚新几内亚":"990009" ,  "法罗群岛":"0" ,  "中非共和国":"983002" ,  "至尊公主邮轮":"0" ,  "也门共和国":"0" ,  "巴西":"973003" ,  "塞浦路斯":"955005" ,  "泰国":"952010" ,  "科威特":"955011" ,  "布隆迪共和国":"0" ,  "丹麦":"962001" ,  "开曼群岛":"0" ,  "保加利亚":"965004" ,  "塞拉利昂":"982015" ,  "斯洛文尼亚":"965014" ,  "尼泊尔":"953005" ,  "英属维尔京群岛":"0" ,  "河南省":"410000" ,  "青海省":"630000" ,  "以色列":"955009" ,  "美属维尔京群岛":"0" ,  "黑龙江省":"230000" ,  "湖北省":"420000" ,  "老挝":"952006" ,  "北爱尔兰":"0" ,  "泽西岛":"0" ,  "比利时":"961001" ,  "河北省":"130000" ,  "吉布提":"985002" ,  "贵州省":"520000" ,  "波兰":"963006" ,  "尼加拉瓜":"972006" ,  "佛得角":"982017" ,  "关岛":"0" ,  "塔吉克斯坦":"954003" ,  "列支敦士登":"963005" ,  "圣巴泰勒米岛":"0" ,  "英国（含北爱尔兰）":"0" ,  "法属圭亚那":"0" ,  "江西省":"360000" ,  "智利":"973004" ,  "爱沙尼亚":"964002" ,  "海地":"974008" ,  "突尼斯":"981006" ,  "斯洛伐克":"963007" ,  "立陶宛":"964004" ,  "尼日利亚":"982013" ,  "伊拉克":"955008" ,  "安哥拉":"984001" ,  "斯里兰卡":"953007" ,  "马来西亚":"952007" ,  "几内亚":"0" ,  "巴拉圭":"973009" ,  "新加坡":"952009" ,  "安徽省":"340000" ,  "土耳其":"955018" ,  "意大利":"965008" ,  "荷属圣马丁":"0" ,  "圣皮埃尔和密克隆群岛":"0" ,  "四川省":"510000" ,  "广东省":"440000" ,  "不丹":"953002" ,  "克罗地亚":"965005" ,  "圣卢西亚":"974011" ,  "柬埔寨":"952003" ,  "毛里塔尼亚":"982012" ,  "格鲁吉亚":"955006" ,  "格陵兰":"0" ,  "重庆市":"500000" ,  "云南省":"530000" ,  "山西省":"140000" ,  "阿塞拜疆":"955003" ,  "马约特":"0" ,  "澳门":"820000" ,  "广西壮族自治区":"450000" ,  "荷兰加勒比地区":"0" ,  "哈萨克斯坦":"954001" ,  "英国":"961007" ,  "斯威士兰":"984010" ,  "圣文森特和格林纳丁斯":"974012" ,  "土库曼斯坦":"954004" ,  "爱尔兰":"961003" ,  "瓜德罗普岛":"0" ,  "萨尔瓦多":"972003" ,  "西班牙":"965015" ,  "白俄罗斯":"964001" ,  "多米尼加":"974006" ,  "苏丹":"981005" ,  "德国":"963003" ,  "黎巴嫩":"955012" ,  "科特迪瓦":"982004" ,  "俄罗斯":"964006" ,  "安提瓜和巴布达":"974001" ,  "韩国":"951004" ,  "北马里亚纳群岛联邦":"0" ,  "福建省":"350000" ,  "马尔代夫":"953004" ,  "塞尔维亚":"965013" ,  "厄立特里亚":"985003" ,  "沙特阿拉伯":"955016" ,  "直布罗陀":"0" ,  "乌拉圭":"973011" ,  "印度":"953003" ,  "马提尼克":"0" ,  "南非":"984011" ,  "江苏省":"320000" ,  "巴拿马":"972007" ,  "天津市":"120000" ,  "波黑":"965003" ,  "卡塔尔":"955015" ,  "孟加拉国":"953001" ,  "马恩岛":"0" ,  "毛里求斯":"984014" ,  "日本":"951002" ,  "福克兰群岛":"0" ,  "多米尼克":"974005" }
city_list=[ "兰州" ,  "普陀区" ,  "潜江" ,  "惠州" ,  "外地来京" ,  "通州区" ,  "酉阳" ,  "南通" ,  "临高县" ,  "眉山" ,  "西城" ,  "亳州" ,  "丰台" ,  "巩义" ,  "曲靖" ,  "安庆" ,  "彭水县" ,  "江门" ,  "璧山区" ,  "涪陵区" ,  "待明确治愈" ,  "门头沟" ,  "郑州" ,  "渝北区" ,  "兵团第九师" ,  "湘西自治州" ,  "崇明区" ,  "甘南" ,  "黔江区" ,  "信阳" ,  "三门峡" ,  "韩城" ,  "秦皇岛" ,  "白城" ,  "松江区" ,  "吉林市" ,  "塔城" ,  "南京" ,  "满洲里" ,  "河东区" ,  "顺义区" ,  "乌鲁木齐" ,  "城口" ,  "杨凌" ,  "通州" ,  "长沙" ,  "保定" ,  "文昌" ,  "未明确地区" ,  "新乡" ,  "梁平区" ,  "不明地区" ,  "鄂州" ,  "兴安盟" ,  "安康" ,  "新乡（含长垣）" ,  "通化" ,  "锡林郭勒盟二连浩特" ,  "宝坻区" ,  "孝感" ,  "焦作" ,  "儋州" ,  "漯河市" ,  "渭南" ,  "两江新区" ,  "呼和浩特" ,  "张家口" ,  "伊春" ,  "娄底" ,  "深圳" ,  "潍坊" ,  "安顺" ,  "呼伦贝尔牙克石市" ,  "龙岩" ,  "阜新" ,  "张掖" ,  "外地来津" ,  "垫江" ,  "南平" ,  "红河" ,  "渝中区" ,  "随州" ,  "宜昌" ,  "保亭" ,  "苏州" ,  "鄂尔多斯" ,  "锡林郭勒盟锡林浩特" ,  "吉林" ,  "开州区" ,  "肇庆" ,  "淮安" ,  "凉山州" ,  "滨海新区" ,  "泸州" ,  "宁东" ,  "襄阳" ,  "怀柔区" ,  "酉阳县" ,  "安阳" ,  "滨州" ,  "浦东新区" ,  "兵团第七师" ,  "密云区" ,  "东城区" ,  "邓州" ,  "杨浦区" ,  "武汉" ,  "待明确" ,  "第八师石河子" ,  "奉节" ,  "乌海市" ,  "外地来粤人员" ,  "石河子" ,  "大同" ,  "洛阳" ,  "湘潭" ,  "吐鲁番" ,  "延边" ,  "梧州" ,  "阜阳" ,  "湛江" ,  "铜仁" ,  "铜川" ,  "第八师石河子市" ,  "岳阳" ,  "景德镇" ,  "监狱系统" ,  "桂林" ,  "第九师" ,  "咸阳" ,  "赣州" ,  "抚顺" ,  "西城区" ,  "厦门" ,  "永城" ,  "宝鸡" ,  "福州" ,  "晋中" ,  "无锡" ,  "兵团第五师五家渠市" ,  "内江" ,  "防城港" ,  "金山区" ,  "外地来京人员" ,  "唐山" ,  "聊城" ,  "鹤壁市" ,  "秀山" ,  "衡水" ,  "漯河" ,  "菏泽" ,  "济宁" ,  "威海" ,  "海北州" ,  "中卫" ,  "南岸区" ,  "宁波" ,  "贵阳" ,  "永州" ,  "朝阳区" ,  "红桥区" ,  "荣昌区" ,  "营口" ,  "辽阳" ,  "毕节" ,  "滁州" ,  "汕头" ,  "待明确地区" ,  "大理" ,  "松原" ,  "nan" ,  "天水" ,  "海淀" ,  "公主岭" ,  "江北区" ,  "门头沟区" ,  "境外输入人员" ,  "昌平区" ,  "大兴区" ,  "临汾市" ,  "黄冈" ,  "荆州" ,  "韶关" ,  "昭通" ,  "万州区" ,  "城口县" ,  "遵义" ,  "合川区" ,  "烟台" ,  "莆田" ,  "佳木斯" ,  "鹤岗" ,  "中山" ,  "佛山" ,  "固原" ,  "兵团第六师五家渠市" ,  "钦州" ,  "定安" ,  "外地来沪人员" ,  "德宏" ,  "成都" ,  "甘孜州" ,  "南宁" ,  "金昌" ,  "普洱" ,  "阿拉善盟" ,  "白银市" ,  "玉溪" ,  "第八师" ,  "怀化" ,  "拉萨" ,  "嘉兴" ,  "四平" ,  "漳州" ,  "柳州" ,  "丰台区" ,  "济南" ,  "石柱" ,  "黑河" ,  "奉节县" ,  "浦东区" ,  "大兴安岭" ,  "乌兰察布" ,  "綦江区" ,  "和平区" ,  "巴中" ,  "长春" ,  "房山区" ,  "澄迈" ,  "承德" ,  "湖州" ,  "梅河口" ,  "江津区" ,  "河北区" ,  "仙桃" ,  "自贡" ,  "晋城" ,  "周口" ,  "宝山区" ,  "庆阳" ,  "雅安" ,  "宿州" ,  "任城监狱" ,  "青浦区" ,  "九龙坡区" ,  "包头市东河区" ,  "河源" ,  "阿克苏地区" ,  "百色" ,  "台州" ,  "三明" ,  "河西区" ,  "芜湖" ,  "巴州" ,  "顺义" ,  "商洛" ,  "朔州市" ,  "铜梁区" ,  "东莞" ,  "石家庄" ,  "五家渠" ,  "大足区" ,  "安阳（含滑县）" ,  "黔西南州" ,  "长治" ,  "楚雄" ,  "高新区" ,  "丽江" ,  "淮南" ,  "通辽" ,  "海口" ,  "汉中" ,  "武清区" ,  "攀枝花" ,  "抚州" ,  "泉州" ,  "邵阳" ,  "咸宁" ,  "宁东管委会" ,  "揭阳" ,  "巫山" ,  "牡丹江" ,  "梅州" ,  "陇南" ,  "宜宾" ,  "锦州" ,  "淮北" ,  "楚雄州" ,  "大兴" ,  "呼和浩特（新城区）" ,  "昌吉州" ,  "太原" ,  "东方市" ,  "丹东" ,  "温州" ,  "怀柔" ,  "外地来穗人员" ,  "南昌" ,  "赤峰市林西县" ,  "大庆" ,  "琼海" ,  "琼海市" ,  "丽江市" ,  "运城" ,  "天门" ,  "石景山区" ,  "珠海" ,  "临高" ,  "盘锦" ,  "达州" ,  "吕梁" ,  "青岛" ,  "武隆区" ,  "伊犁州" ,  "未知" ,  "奉贤区" ,  "固始县" ,  "文山" ,  "衢州" ,  "西双版纳州" ,  "阳泉" ,  "茂名" ,  "本溪" ,  "包头" ,  "南充" ,  "合肥" ,  "淄博市" ,  "津南区" ,  "榆林" ,  "恩施州" ,  "万宁" ,  "新余" ,  "葫芦岛" ,  "南阳" ,  "保山" ,  "德州" ,  "赤峰" ,  "境外来沪" ,  "东丽区" ,  "长垣县" ,  "齐齐哈尔" ,  "沧州" ,  "黄浦区" ,  "云阳" ,  "省十里丰监狱" ,  "四平市" ,  "陵水县" ,  "广安" ,  "虹口区" ,  "绍兴" ,  "省级（湖北输入）" ,  "东城" ,  "铁岭" ,  "常德" ,  "临沧" ,  "金华" ,  "开封" ,  "平凉" ,  "未知地区" ,  "朔州" ,  "清远" ,  "宜春" ,  "昌江" ,  "琼中" ,  "海淀区" ,  "泰安" ,  "乐山" ,  "邯郸市" ,  "西安" ,  "歙县" ,  "平顶山" ,  "北海" ,  "西宁市" ,  "黔东南州" ,  "河源市" ,  "鄂尔多斯鄂托克前旗" ,  "昌平" ,  "宁河区" ,  "资阳" ,  "德宏州" ,  "衡阳" ,  "巫溪县" ,  "石柱县" ,  "白银" ,  "贺州" ,  "赣江新区" ,  "澄迈县" ,  "汕尾" ,  "丰都县" ,  "阿坝州" ,  "锡林郭勒" ,  "三亚" ,  "兵团第四师" ,  "吴忠" ,  "凉山" ,  "长垣" ,  "锡林郭勒盟" ,  "红河州" ,  "通辽市经济开发区" ,  "第六师" ,  "德阳" ,  "乐东" ,  "昌吉" ,  "潼南区" ,  "滑县" ,  "杨浦" ,  "许昌" ,  "扬州" ,  "绵阳" ,  "商丘（含永城）" ,  "金昌市" ,  "潮州" ,  "泰州" ,  "未明确" ,  "东方" ,  "吐鲁番市" ,  "绥化" ,  "十堰" ,  "萍乡" ,  "徐汇区" ,  "荆门" ,  "外地来津人员" ,  "廊坊" ,  "抚顺市" ,  "呼伦贝尔满洲里" ,  "文山州" ,  "鹤壁" ,  "武汉来京人员" ,  "临夏" ,  "黔南州" ,  "巫溪" ,  "喀什地区" ,  "巫山县" ,  "北辰区" ,  "鸡西" ,  "郴州" ,  "丰都" ,  "辽源" ,  "延庆区" ,  "淄博" ,  "兴安盟乌兰浩特" ,  "阳江" ,  "张家界" ,  "赤峰市松山区" ,  "闵行区" ,  "云阳县" ,  "黄山" ,  "垫江县" ,  "徐州" ,  "平凉市" ,  "濮阳" ,  "定西" ,  "连云港" ,  "长宁区" ,  "宿松" ,  "盐城" ,  "兵团第八师石河子市" ,  "蚌埠" ,  "西双版纳" ,  "临汾" ,  "银川" ,  "舟山" ,  "贵港" ,  "第七师" ,  "永川区" ,  "丽水" ,  "六盘水" ,  "铜陵" ,  "上饶" ,  "沈阳" ,  "境外输入" ,  "邢台" ,  "巴南区" ,  "宁德" ,  "商丘" ,  "吉安" ,  "嘉定区" ,  "鄂尔多斯东胜区" ,  "西宁" ,  "大理州" ,  "金山" ,  "南开区" ,  "安阳市" ,  "玉林" ,  "常州" ,  "包头市昆都仑区" ,  "枣庄" ,  "天水市" ,  "巴彦淖尔" ,  "秀山县" ,  "九江" ,  "鹰潭" ,  "外地来沪" ,  "驻马店" ,  "乌海" ,  "石景山" ,  "长寿区" ,  "日照" ,  "哈尔滨" ,  "六安" ,  "来宾" ,  "大连" ,  "池州" ,  "济源" ,  "株洲" ,  "邯郸" ,  "宿迁" ,  "马鞍山" ,  "琼中县" ,  "西青区" ,  "七台河" ,  "黄石" ,  "静安区" ,  "沙坪坝区" ,  "益阳" ,  "陵水" ,  "昆明" ,  "河池" ,  "朝阳" ,  "遂宁" ,  "澳门" ,  "镇江" ,  "忻州" ,  "忠县" ,  "延安" ,  "海东" ,  "广元" ,  "大渡口区" ,  "石嘴山" ,  "万盛经开区" ,  "南阳（含邓州）" ,  "鞍山" ,  "杭州" ,  "临沂" ,  "呼伦贝尔" ,  "双鸭山" ,  "兵团第十二师" ,  "广州" ,  "胡杨河" ,  "阿克苏" ,  "嘉峪关" ,  "呼伦贝尔牙克石" ,  "松江" ,  "神农架林区" ,  "宣城"]
city_list_E={
    "临高":"Lingao County" ,  "大足区":"Dazu District" ,  "衡水":"Hengshui" ,  "怀化":"Huaihua" ,  "铁岭":"Tieling" ,  "广州":"Guangzhou" ,  "烟台":"Yantai" ,  "德州":"Dezhou" ,  "新余":"Xinyu" ,  "西安":"Xi\ an" ,  "宣城":"Xuancheng" ,  "闵行区":"Minhang District" ,  "资阳":"Ziyang" ,  "达州":"Dazhou" ,  "酉阳":"nan" ,  "西城":"nan" ,  "济南":"Jinan" ,  "凉山州":"Liangshan Yi Autonomous Prefecture" ,  "甘南":"Gannan" ,  "黔江区":"Qianjiang Tujia and Miao Autonomous County" ,  "延边":"Yanbian" ,  "石河子":"nan" ,  "广安":"Guang\ an" ,  "清远":"Qingyuan" ,  "开封":"Kaifeng" ,  "德宏州":"Dehong" ,  "河源市":"nan" ,  "长治":"Changzhi" ,  "佳木斯":"Jiamusi" ,  "株洲":"Zhuzhou" ,  "曲靖":"Qujing" ,  "阜阳":"Fuyang" ,  "兰州":"Lanzhou" ,  "南阳":"Nanyang" ,  "延安":"Yan\ an" ,  "陵水县":"nan" ,  "北海":"Beihai" ,  "东城":"nan" ,  "晋中":"Jinzhong" ,  "通州区":"Tongzhou District" ,  "佛山":"Foshan" ,  "赣江新区":"Ganjiang New District" ,  "百色":"Baise" ,  "永州":"Yongzhou" ,  "江北区":"Jiangbei District" ,  "伊春":"Yichun" ,  "南阳（含邓州）":"nan" ,  "沧州":"Cangzhou" ,  "昌平":"nan" ,  "鄂尔多斯东胜区":"nan" ,  "松江":"nan" ,  "铜川":"Tongchuan" ,  "永城":"nan" ,  "雅安":"Ya\ an" ,  "第九师":"nan" ,  "河源":"Heyuan" ,  "牡丹江":"Mudanjiang" ,  "潮州":"Chaozhou" ,  "池州":"Chizhou" ,  "外地来粤人员":"nan" ,  "涪陵区":"Fuling District" ,  "澳门":"Macau" ,  "待明确治愈":"nan" ,  "辽阳":"Liaoyang" ,  "深圳":"Shenzhen" ,  "信阳":"Xinyang" ,  "兵团第十二师":"Xinjiang Production and Construction Corps 12th Division" ,  "成都":"Chengdu" ,  "未知地区":"nan" ,  "太原":"Taiyuan" ,  "公主岭":"Gongzhuling" ,  "榆林":"Yulin" ,  "阿坝州":"Ngawa Tibetan and Qiang Autonomous Prefecture" ,  "无锡":"Wuxi" ,  "东莞":"Dongguan" ,  "湘西自治州":"Xiangxi" ,  "常州":"Changzhou" ,  "红河":"nan" ,  "永川区":"Yongchuan District" ,  "琼中县":"nan" ,  "攀枝花":"Panzhihua" ,  "济宁":"Jining" ,  "淄博":"Zibo" ,  "许昌":"Xuchang" ,  "辽源":"Liaoyuan" ,  "秀山县":"Xiushan Tujia and Miao Autonomous County" ,  "锡林郭勒盟锡林浩特":"nan" ,  "平顶山":"Pingdingshan" ,  "黔东南州":"Qiandongnan" ,  "郑州":"Zhengzhou" ,  "三门峡":"Sanmenxia" ,  "镇江":"Zhenjiang" ,  "海北州":"Haibei" ,  "天门":"Tianmen" ,  "鄂尔多斯鄂托克前旗":"nan" ,  "丰台":"nan" ,  "待明确地区":"Area not defined" ,  "泰州":"Taizhou" ,  "蚌埠":"Bengbu" ,  "城口":"nan" ,  "荣昌区":"Rongchang District" ,  "锡林郭勒":"nan" ,  "第七师":"nan" ,  "东方市":"nan" ,  "韶关":"Shaoguan" ,  "乐东":"Ledong Li Autonomous County" ,  "塔城":"Tacheng" ,  "长寿区":"Changshou District" ,  "海淀区":"Haidian District" ,  "锦州":"Jinzhou" ,  "桂林":"Guilin" ,  "万盛经开区":"Wansheng District" ,  "枣庄":"Zaozhuang" ,  "来宾":"Laibin" ,  "石柱":"nan" ,  "鸡西":"Jixi" ,  "银川":"Yinchuan" ,  "外地来沪":"nan" ,  "晋城":"Jincheng" ,  "广元":"Guangyuan" ,  "门头沟区":"Mentougou District" ,  "漯河":"Luohe" ,  "保亭":"Baoting Li and Miao Autonomous County" ,  "五家渠":"nan" ,  "绵阳":"Mianyang" ,  "益阳":"Yiyang" ,  "朔州市":"nan" ,  "琼海市":"nan" ,  "外地来京":"nan" ,  "孝感":"Xiaogan" ,  "泸州":"Luzhou" ,  "赤峰":"Chifeng" ,  "邵阳":"Shaoyang" ,  "未明确":"nan" ,  "张家口":"Zhangjiakou" ,  "昌吉":"nan" ,  "锡林郭勒盟二连浩特":"nan" ,  "城口县":"Chengkou County" ,  "宝鸡":"Baoji" ,  "荆门":"Jingmen" ,  "津南区":"Jinnan District" ,  "江门":"Jiangmen" ,  "秀山":"nan" ,  "两江新区":"Liangjiang New Area" ,  "中山":"Zhongshan" ,  "忻州":"Xinzhou" ,  "宿松":"nan" ,  "北辰区":"Beichen District" ,  "阿克苏":"nan" ,  "自贡":"Zigong" ,  "海口":"Haikou" ,  "大兴区":"Daxing District" ,  "大兴安岭":"Daxinganling" ,  "不明地区":"nan" ,  "东方":"Dongfang" ,  "大同":"Datong" ,  "通州":"nan" ,  "南宁":"Nanning" ,  "肇庆":"Zhaoqing" ,  "贵港":"Guigang" ,  "大兴":"nan" ,  "省级（湖北输入）":"nan" ,  "十堰":"Shiyan" ,  "咸阳":"Xianyang" ,  "兵团第八师石河子市":"Shihezi, Xinjiang Production and Construction Corps 8th Division" ,  "汕头":"Shantou" ,  "滑县":"nan" ,  "天水市":"nan" ,  "潼南区":"Tongnan District" ,  "武清区":"Wuqing District" ,  "淮北":"Huaibei" ,  "济源":"Jiyuan" ,  "河池":"Hechi" ,  "房山区":"Fangshan District" ,  "平凉":"Pingliang" ,  "日照":"Rizhao" ,  "泉州":"Quanzhou" ,  "南开区":"Nankai District" ,  "黄石":"Huangshi" ,  "外地来京人员":"People from other cities" ,  "汉中":"Hanzhong" ,  "苏州":"Suzhou" ,  "吕梁":"Lüliang" ,  "温州":"Wenzhou" ,  "湖州":"Huzhou" ,  "澄迈县":"nan" ,  "眉山":"Meishan" ,  "焦作":"Jiaozuo" ,  "朝阳区":"Chaoyang District" ,  "丽江":"Lijiang" ,  "合肥":"Hefei" ,  "密云区":"Miyun District" ,  "衢州":"Quzhou" ,  "秦皇岛":"Qinhuangdao" ,  "大理州":"Dali" ,  "周口":"Zhoukou" ,  "宁德":"Ningde" ,  "渝北区":"Yubei District" ,  "铜梁区":"Tongliang District" ,  "揭阳":"Jieyang" ,  "第八师石河子":"nan" ,  "昌吉州":"Changji" ,  "外地来穗人员":"nan" ,  "丽水":"Lishui" ,  "乌鲁木齐":"Urumqi" ,  "红桥区":"Hongqiao District" ,  "石柱县":"Shizhu Tujia Autonomous County" ,  "阿克苏地区":"Akesu" ,  "汕尾":"Shanwei" ,  "玉林":"Yulin" ,  "阜新":"Fuxin" ,  "普陀区":"Putuo District" ,  "铜仁":"Tongren" ,  "金昌":"Jinchang" ,  "延庆区":"Yanqing District" ,  "阿拉善盟":"Alashanmeng" ,  "厦门":"Xiamen" ,  "嘉兴":"Jiaxing" ,  "忠县":"Zhong County" ,  "杨凌":"Yangling District in Xianyang" ,  "nan":"nan" ,  "洛阳":"Luoyang" ,  "虹口区":"Hongkou District" ,  "巫溪":"nan" ,  "南充":"Nanchong" ,  "珠海":"Zhuhai" ,  "巫溪县":"Wuxi County" ,  "平凉市":"nan" ,  "潍坊":"Weifang" ,  "九龙坡区":"Jiulongpo District" ,  "外地来津":"nan" ,  "宿迁":"Suqian" ,  "呼和浩特（新城区）":"nan" ,  "青浦区":"Qingpu District" ,  "楚雄":"nan" ,  "兵团第五师五家渠市":"nan" ,  "武汉来京人员":"nan" ,  "赤峰市林西县":"nan" ,  "莆田":"Putian" ,  "临汾市":"nan" ,  "景德镇":"Jingdezhen" ,  "德宏":"nan" ,  "新乡":"Xinxiang" ,  "衡阳":"Hengyang" ,  "贺州":"Hezhou" ,  "石嘴山":"Shizuishan" ,  "乌海":"nan" ,  "鹤岗":"Hegang" ,  "静安区":"Jing\ an District" ,  "陇南":"Longnan" ,  "四平市":"Siping" ,  "中卫":"Zhongwei" ,  "邯郸":"Handan" ,  "未明确地区":"nan" ,  "未知":"nan" ,  "开州区":"Kaizhou District" ,  "包头":"Baotou" ,  "四平":"nan" ,  "商丘":"Shangqiu" ,  "韩城":"Hancheng" ,  "江津区":"Jiangjin District" ,  "宁河区":"Ninghe District" ,  "威海":"Weihai" ,  "杭州":"Hangzhou" ,  "鄂尔多斯":"Ordos" ,  "西双版纳":"Xishuangbanna" ,  "昭通":"Zhaotong" ,  "顺义区":"Shunyi District" ,  "阳泉":"Yangquan" ,  "锡林郭勒盟":"Linguolexi" ,  "芜湖":"Wuhu" ,  "河东区":"Hedong District" ,  "临沧":"Lincang" ,  "第六师":"nan" ,  "滨州":"Binzhou" ,  "安顺":"Anshun" ,  "淄博市":"nan" ,  "唐山":"Tangshan" ,  "临沂":"Linyi" ,  "垫江":"nan" ,  "白城":"Baicheng" ,  "凉山":"Liangshan" ,  "门头沟":"nan" ,  "运城":"Yuncheng" ,  "马鞍山":"Ma\ anshan" ,  "遵义":"Zunyi" ,  "外地来津人员":"People from other cities" ,  "金华":"Jinhua" ,  "临汾":"Linfen" ,  "遂宁":"Suining" ,  "彭水县":"Pengshui Miao and Tujia Autonomous County" ,  "奉节县":"Fengjie County" ,  "七台河":"Qitaihe" ,  "金昌市":"nan" ,  "甘孜州":"Garzê Tibetan Autonomous Prefecture" ,  "黑河":"Heihe" ,  "石家庄":"Shijiazhuang" ,  "渭南":"Weinan" ,  "酉阳县":"Youyang Tujia and Miao Autonomous County" ,  "宜春":"Yichun" ,  "高新区":"Chongqing High-tech Zone" ,  "歙县":"nan" ,  "菏泽":"Heze" ,  "赣州":"Ganzhou" ,  "黔南州":"Qiannan" ,  "盘锦":"Panjin" ,  "襄阳":"Xiangyang" ,  "漯河市":"nan" ,  "承德":"Chengde" ,  "惠州":"Huizhou" ,  "喀什地区":"nan" ,  "白银":"Baiyin" ,  "巩义":"nan" ,  "三亚":"Sanya" ,  "营口":"Yingkou" ,  "金山":"nan" ,  "安阳市":"nan" ,  "宁东":"Ningdong County" ,  "六盘水":"Liupanshui" ,  "湛江":"Zhanjiang" ,  "濮阳":"Puyang" ,  "玉溪":"Yuxi" ,  "杨浦区":"Yangpu District" ,  "商丘（含永城）":"nan" ,  "丰都县":"Fengdu County" ,  "巫山县":"Wushan County" ,  "南平":"Nanping" ,  "潜江":"Qianjiang" ,  "沈阳":"Shenyang" ,  "徐汇区":"Xuhui District" ,  "宜宾":"Yibin" ,  "齐齐哈尔":"Qiqihar" ,  "浦东新区":"Pudong District" ,  "璧山区":"Bishan District" ,  "梁平区":"Liangping District" ,  "葫芦岛":"Huludao" ,  "崇明区":"Chongming District" ,  "红河州":"Honghe" ,  "保定":"Baoding" ,  "巴彦淖尔":"Bayannur" ,  "文山":"nan" ,  "吐鲁番市":"Turpan" ,  "垫江县":"Dianjiang County" ,  "兴安盟":"Xinganmeng" ,  "梅河口":"Meihekou" ,  "东城区":"Dongcheng District" ,  "固原":"Guyuan" ,  "兵团第九师":"Xinjiang Production and Construction Corps 9th Division" ,  "吉林":"nan" ,  "荆州":"Jingzhou" ,  "吉安":"Ji\ an" ,  "巴中":"Bazhong" ,  "绥化":"Suihua" ,  "滨海新区":"Binhai New Area" ,  "怀柔":"nan" ,  "黄冈":"Huanggang" ,  "六安":"Lu\ an" ,  "南通":"Nantong" ,  "驻马店":"Zhumadian" ,  "监狱系统":"nan" ,  "宿州":"Suzhou" ,  "金山区":"Jinshan District" ,  "乌海市":"Wuhai" ,  "琼海":"Qionghai" ,  "海北州":"nan" ,  "保山":"Baoshan" ,  "西双版纳州":"nan" ,  "呼和浩特":"Hohhot" ,  "舟山":"Zhoushan" ,  "廊坊":"Langfang" ,  "和平区":"Heping District" ,  "綦江区":"Qijiang District" ,  "柳州":"Liuzhou" ,  "大理":"nan" ,  "新乡（含长垣）":"nan" ,  "渝中区":"Yuzhong District" ,  "钦州":"Qinzhou" ,  "顺义":"nan" ,  "河西区":"Hexi District" ,  "防城港":"Fangchenggang" ,  "长垣县":"nan" ,  "萍乡":"Pingxiang" ,  "鹤壁":"Hebi" ,  "临夏":"Linxia" ,  "张家界":"Zhangjiajie" ,  "漳州":"Zhangzhou" ,  "丰都":"nan" ,  "扬州":"Yangzhou" ,  "上饶":"Shangrao" ,  "省十里丰监狱":"Shilifeng Prison" ,  "吴忠":"Wuzhong" ,  "通辽":"Tongliao" ,  "第八师":"nan" ,  "连云港":"Lianyungang" ,  "仙桃":"Xiantao" ,  "浦东区":"nan" ,  "咸宁":"Xianning" ,  "抚州":"Fuzhou" ,  "盐城":"Yancheng" ,  "长沙":"Changsha" ,  "吐鲁番":"nan" ,  "淮南":"Huainan" ,  "昆明":"Kunming" ,  "定安":"Ding\ an County" ,  "合川区":"Hechuan District" ,  "境外来沪":"nan" ,  "茂名":"Maoming" ,  "定西":"Dingxi" ,  "琼中":"Qiongzhong Li and Miao Autonomous County" ,  "南京":"Nanjing" ,  "西青区":"Xiqing District" ,  "待明确":"nan" ,  "巴南区":"Banan District" ,  "呼伦贝尔牙克石":"nan" ,  "境外输入":"nan" ,  "龙岩":"Longyan" ,  "武隆区":"Wulong District" ,  "张掖":"Zhangye" ,  "大渡口区":"Dadukou District" ,  "徐州":"Xuzhou" ,  "湘潭":"Xiangtan" ,  "邓州":"nan" ,  "常德":"Changde" ,  "嘉峪关":"Jiayuguan" ,  "松江区":"Songjiang District" ,  "庆阳":"Qingyang" ,  "兴安盟乌兰浩特":"nan" ,  "鹤壁市":"nan" ,  "九江":"Jiujiang" ,  "丰台区":"Fengtai District" ,  "西宁":"Xining" ,  "安阳（含滑县）":"nan" ,  "胡杨河":"nan" ,  "宝坻区":"Baodi District" ,  "呼伦贝尔":"Hulunbuir" ,  "宁东管委会":"nan" ,  "阳江":"Yangjiang" ,  "澄迈":"Chengmai County" ,  "哈尔滨":"Harbin" ,  "儋州":"Danzhou" ,  "神农架林区":"Shennongjia" ,  "普洱":"Pu\ er" ,  "黄浦区":"Huangpu District" ,  "海淀":"nan" ,  "随州":"Suizhou" ,  "德阳":"Deyang" ,  "安康":"Ankang" ,  "朔州":"Shuozhou" ,  "乌兰察布":"Ulanqab" ,  "昌平区":"Changping District" ,  "吉林市":"Jilin" ,  "天水":"Tianshui" ,  "伊犁州":"Yili" ,  "东丽区":"Dongli District" ,  "宝山区":"Baoshan District" ,  "梅州":"Meizhou" ,  "固始县":"nan" ,  "邢台":"Xingtai" ,  "聊城":"Liaocheng" ,  "抚顺市":"nan" ,  "朝阳":"nan" ,  "昌江":"Changjiang Li Autonomous County" ,  "海东":"Haidong" ,  "鞍山":"Anshan" ,  "乐山":"Leshan" ,  "丹东":"Dandong" ,  "兵团第四师":"Xinjiang Production and Construction Corps 4th Division" ,  "朝阳":"Chaoyang" ,  "铜陵":"Tongling" ,  "鄂州":"Ezhou" ,  "鹰潭":"Yingtan" ,  "大连":"Dalian" ,  "白银市":"nan" ,  "石景山区":"Shijingshan District" ,  "安庆":"Anqing" ,  "巫山":"nan" ,  "丽江市":"nan" ,  "嘉定区":"Jiading District" ,  "黔西南州":"Qianxinan" ,  "万州区":"Wanzhou District" ,  "云阳县":"Yunyang County" ,  "长垣":"nan" ,  "文山州":"Wenshan" ,  "满洲里":"nan" ,  "郴州":"Chenzhou" ,  "岳阳":"Yueyang" ,  "兵团第六师五家渠市":"Wujiaqu, Xinjiang Production and Construction Corps 5th Division" ,  "呼伦贝尔牙克石市":"nan" ,  "内江":"Neijiang" ,  "西宁市":"nan" ,  "临高县":"nan" ,  "河北区":"Hebei District" ,  "滁州":"Chuzhou" ,  "外地来沪人员":"People from other cities" ,  "毕节":"Bijie" ,  "呼伦贝尔满洲里":"nan" ,  "大庆":"Daqing" ,  "兵团第七师":"Xinjiang Production and Construction Corps 7th Division" ,  "境外输入人员":"nan" ,  "松原":"Songyuan" ,  "本溪":"Benxi" ,  "双鸭山":"Shuangyashan" ,  "长春":"Changchun" ,  "淮安":"Huainan" ,  "巴州":"Bayingolin Mongol Autonomous Prefecture" ,  "省十里丰监狱":"nan" ,  "贵阳":"Guiyang" ,  "通辽市经济开发区":"nan" ,  "邯郸市":"nan" ,  "石景山":"nan" ,  "绍兴":"Shaoxing" ,  "安阳":"Anyang" ,  "沙坪坝区":"Shapingba District" ,  "奉贤区":"Fengxian District" ,  "包头市昆都仑区":"nan" ,  "宁波":"Ningbo" ,  "文昌":"Wenchang" ,  "万宁":"Wanning" ,  "抚顺":"Fushun" ,  "杨浦":"nan" ,  "长宁区":"Changning District" ,  "奉节":"nan" ,  "南岸区":"Nan\ an District" ,  "通化":"Tonghua" ,  "拉萨":"Lhasa" ,  "黄山":"Huangshan" ,  "三明":"Sanming" ,  "陵水":"Lingshui Li Autonomous County" ,  "南昌":"Nanchang" ,  "青岛":"Qingdao" ,  "武汉":"Wuhan" ,  "赤峰市松山区":"nan" ,  "任城监狱":"nan" ,  "台州":"Taizhou" ,  "商洛":"Shangluo" ,  "楚雄州":"Chuxiong" ,  "恩施州":"Enshi Tujia and Miao Autonomous Prefecture" ,  "云阳":"nan" ,  "泰安":"Tai\ an" ,  "第八师石河子市":"nan" ,  "包头市东河区":"nan" ,  "福州":"Fuzhou" ,  "亳州":"Bozhou" ,  "怀柔区":"Huairou District" ,  "梧州":"Wuzhou" ,  "娄底":"Loudi" ,  "西城区":"Xicheng District" ,  "宜昌":"Yichang"
}
city_zipCode={"兵团第十二师":"0", "仙桃":"429004", "玉林":"450900", "洛阳":"410300", "承德":"130800", "开州区":"500154", "乌鲁木齐":"650100", "外地来津人员":"0", "境外输入":"0", "西城":"", "临高县":"469024", "信阳":"411500", "达州":"511700", "昌吉州":"0", "松原":"220700", "来宾":"451300", "梧州":"450400", "沈阳":"210100", "鹰潭":"360600", "徐州":"320300", "天水市":"0", "阿坝州":"513200", "马鞍山":"340500", "锡林郭勒盟二连浩特":"", "大连":"210200", "日照":"371100", "普洱":"530800", "德州":"371400", "闵行区":"310112", "包头":"150200", "静安区":"310106", "广州":"440100", "宁波":"330200", "乌海市":"150300", "黔江区":"500114", "长垣":"0", "外地来沪人员":"-1", "临高":"469024", "泉州":"350500", "景德镇":"360200", "凉山州":"513400", "牡丹江":"231000", "平凉市":"620800", "锡林郭勒盟":"152500", "遂宁":"510900", "运城":"140800", "广安":"511600", "德阳":"510600", "金昌市":"620300", "彭水县":"500243", "深圳":"440300", "鄂州":"420700", "天水市":"620500", "包头市东河区":"", "河池":"451200", "萍乡":"360300", "外地来粤人员":"", "孝感":"420900", "盐城":"320900", "大理":"0", "厦门":"350200", "第八师石河子市":"", "文山州":"0", "廊坊":"131000", "澄迈县":"469023", "钦州":"450700", "平顶山":"410400", "鹤壁":"410600", "中山":"442000", "丽水":"331100", "南平":"350700", "任城监狱":"0", "咸宁":"421200", "宁东":"0", "淮南":"340400", "第六师":"0", "韩城":"610581", "泰安":"370900", "衡水":"131100", "吴忠":"640300", "长垣县":"410728", "黔南州":"522700", "焦作":"410800", "巴南区":"500113", "葫芦岛":"211400", "台州":"331000", "九江":"360400", "呼伦贝尔牙克石市":"", "澄迈":"469023", "兵团第九师":"0", "万宁":"469006", "宁东管委会":"0", "巫溪县":"500238", "宝鸡":"610300", "海东":"630200", "枣庄":"370400", "贵阳":"520100", "周口":"411600", "河源":"441600", "伊犁州":"654000", "潍坊":"370700", "西城区":"110102", "常德":"430700", "忠县":"500233", "大兴":"", "第七师":"0", "虹口区":"310109", "濮阳":"410900", "陵水县":"469028", "第八师":"-1", "贵港":"450800", "不明地区":"0", "白银市":"0", "垫江县":"500231", "安康":"610900", "通辽":"150500", "安顺":"520400", "云阳县":"500235", "永川区":"500118", "东方":"469007", "外地来津":"-1", "满洲里":"0", "资阳":"512000", "红桥区":"120106", "河东区":"120102", "昌吉":"652301", "丽江市":"", "朝阳区":"110105", "随州":"421300", "淄博市":"", "邯郸市":"", "舟山":"330900", "奉节县":"500236", "聊城":"371500", "渝中区":"500103", "金昌市":"0", "西双版纳":"532800", "琼中县":"0", "綦江区":"500110", "杨浦区":"310110", "璧山区":"500120", "常州":"320400", "保山":"530500", "南昌":"360100", "秦皇岛":"130300", "铁岭":"211200", "监狱系统":"0", "本溪":"210500", "临汾":"141000", "九龙坡区":"500107", "柳州":"450200", "六安":"341500", "平凉市":"0", "铜川":"610200", "揭阳":"445200", "汉中":"610700", "阳江":"441700", "邢台":"130500", "两江新区":"-1", "未知地区":"-1", "温州":"330300",  "待明确":"0", "漯河市":"411100", "漯河市":"0", "太原":"140100", "嘉峪关":"620200", "乐山":"511100", "杨凌":"0", "红河州":"0", "神农架林区":"429021", "陵水县":"0", "咸阳":"610400", "天门":"429006", "沙坪坝区":"500106", "唐山":"130200", "赣州":"360700", "酉阳县":"0", "通州":"", "芜湖":"340200", "南京":"320100", "德宏州":"0", "北海":"450500", "宿州":"341300", "秀山县":"500241", "菏泽":"371700", "锡林郭勒盟锡林浩特":"0", "公主岭":"220381", "普陀区":"310107", "胡杨河":"0", "石河子":"659001", "自贡":"510300", "安阳市":"410500", "兵团第五师五家渠市":"0", "毕节":"520500", "郑州":"410100", "外地来穗人员":"", "蚌埠":"340300", "茂名":"440900", "长沙":"430100", "金昌":"620300", "兰州":"620100", "曲靖":"530300", "兵团第八师石河子市":"0", "乐东":"469027", "琼中":"469030", "攀枝花":"510400", "南充":"511300", "漳州":"350600", "保亭":"469029", "丰台区":"110106", "黄冈":"421100", "定安":"469021", "新乡":"410700", "昆明":"530100", "大同":"140200", "江门":"440700", "百色":"451000", "滁州":"341100", "大理州":"0", "万州区":"500101", "四平市":"220300", "亳州":"341600", "锦州":"210700", "大理":"532901", "驻马店":"411700", "怀柔":"", "淄博":"370300", "黔东南州":"522600", "赣江新区":"0", "许昌":"411000", "澄迈县":"", "抚州":"361000", "阿拉善盟":"152900", "朔州市":"", "鄂尔多斯鄂托克前旗":"", "未明确":"0", "清远":"441800", "丰都县":"500230", "邵阳":"430500", "杭州":"330100", "济宁":"370800", "待明确治愈":"0", "大兴区":"110115", "呼伦贝尔牙克石":"", "恩施州":"422801", "恩施州":"", "昭通":"530600", "衢州":"330800", "吉安":"360800", "商丘":"411400", "商洛":"611000", "外地来津":"", "":"", "渝北区":"500112", "长治":"140400", "凉山":"", "铜仁":"520600", "宣城":"341800", "金昌市":"", "双鸭山":"230500", "沧州":"130900", "和平区":"120101", "定西":"621100", "固始县":"", "黄石":"420200", "吕梁":"141100", "石河子":"", "梅州":"441400", "乌海":"150300", "滨州":"371600", "南阳（含邓州）":"0", "白银":"620400", "第七师":"-1", "津南区":"120112", "潜江":"429005", "杨浦":"", "保定":"130600", "巫山":"", "文山":"532601", "陵水":"469028", "鸡西":"230300", "石柱县":"500240", "晋中":"140700", "琼海市":"0", "西安":"610100", "石景山":"", "乌兰察布":"150900", "未知":"0", "吐鲁番":"650400", "济南":"370100", "大足区":"500111", "琼中县":"469030", "东方市":"0", "辽阳":"211000", "通化":"220500", "朝阳":"211300", "琼海":"469002", "未知地区":"", "阜阳":"341200", "庆阳":"621000", "赤峰市林西县":"", "南阳":"411300", "哈尔滨":"230100", "宿迁":"321300", "吐鲁番市":"650400", "延庆区":"110119", "奉节":"", "甘孜州":"513300", "阳泉":"140300", "临高县":"", "甘南":"623000", "滑县":"", "淮北":"340600", "广元":"510800", "珠海":"440400", "荆州":"421000", "阿克苏地区":"652900", "城口":"", "天水市":"", "大渡口区":"500104", "漯河":"411100", "安阳市":"0", "高新区":"0", "白城":"220800", "永城":"0", "漯河市":"", "河西区":"120103", "临沂":"371300", "石嘴山":"640200", "境外来沪":"0", "汕尾":"441500", "第八师":"0", "衡阳":"430400", "永州":"431100", "鄂尔多斯":"150600", "湘潭":"430300", "新乡（含长垣）":"0", "西宁市":"0", "丰台":"", "忻州":"140900", "东城":"", "第八师石河子":"", "渭南":"610500", "贺州":"451100", "吉林":"220000", "青浦区":"310118", "黄浦区":"310101", "宁德":"350900", "丹东":"210600", "呼伦贝尔":"150700", "平凉市":"", "宜昌":"420500", "晋城":"140500", "酉阳":"500242", "东丽区":"120110", "淮安":"320800", "朔州":"140600", "南通":"320600", "连云港":"320700", "城口县":"500229", "恩施州":"0", "武隆区":"500156", "娄底":"431300", "四平":"", "呼伦贝尔满洲里":"", "浦东区":"", "潼南区":"500152", "垫江":"", "巫山县":"500237", "湖州":"330500", "喀什地区":"653100", "鞍山":"210300", "顺义":"", "松江区":"310117", "巴州":"511902", "酉阳":"0", "临高县":"0", "湘西自治州":"433100", "安阳":"410500", "佛山":"440600", "铜梁区":"500151", "阿克苏":"0", "房山区":"110111", "黄山":"341000", "楚雄州":"0", "武汉来京人员":"", "陇南":"621200", "绥化":"231200", "嘉兴":"330400", "恩施州":"422800", "三亚":"460200", "外地来京人员":"-1", "文昌":"469005", "昌江":"469026", "宝坻区":"120115", "宿松":"", "金山区":"310116", "开封":"410200", "金山":"", "三门峡":"411200", "长寿区":"500115", "赤峰":"150400", "海口":"460100", "无锡":"320200", "海北州":"0", "胡杨河":"", "呼和浩特（新城区）":"", "滑县":"410526", "武清区":"120114", "红河":"0", "塔城":"654201", "丽江":"530700", "苏州":"320500", "邯郸":"130400", "第八师":"", "黔西南州":"522300", "南宁":"450100", "鹤壁市":"", "大理":"", "浦东新区":"310115", "湛江":"440800", "海北州":"632200", "新余":"360500", "吐鲁番":"0", "海淀":"", "宜春":"360900", "济源":"419001", "抚顺":"210400", "宁河区":"120117", "荆门":"420800", "内江":"511000", "合川区":"500117", "外地来沪":"0", "汕头":"440500", "扬州":"321000", "宜宾":"511500", "长垣县":"0", "浦东新区":"", "海淀区":"110108", "岳阳":"430600", "未知地区":"0", "盘锦":"211100", "西双版纳州":"", "松江":"", "河源市":"", "玉溪":"530400", "天水":"620500", "益阳":"430900", "梅河口":"220581", "境外输入人员":"0", "巴中":"511900", "秀山":"", "齐齐哈尔":"230200", "永城":"411481", "云阳":"", "烟台":"370600", "延安":"610600", "绵阳":"510700", "十堰":"420300", "崇明区":"310151", "眉山":"511400", "黑河":"231100", "银川":"640100", "东城区":"110101", "白银市":"620400", "省级（湖北输入）":"0", "锡林郭勒":"", "昌平区":"110114", "武汉":"420100", "梁平区":"500155", "邓州":"411381", "第九师":"", "镇江":"321100", "遵义":"520300", "金华":"330700", "歙县":"", "昌平":"", "河北区":"120105", "嘉定区":"310114", "兴安盟":"152200", "澄迈县":"0", "六盘水":"520200", "门头沟区":"110109", "泰州":"321200", "桂林":"450300", "中卫":"640500", "阜新":"210900", "商丘（含永城）":"0", "成都":"510100", "阿克苏":"", "密云区":"110118", "赤峰市松山区":"", "怀化":"431200", "南岸区":"500108", "保亭":"0", "未明确地区":"0", "东方市":"469007", "泸州":"510500", "阿克苏":"652901", "呼和浩特":"150100", "滑县":"0", "营口":"210800", "七台河":"230900", "伊春":"230700", "德宏":"0", "琼中县":"", "辽源":"220400", "铜陵":"340700", "包头市昆都仑区":"", "兵团第七师":"0", "大兴安岭":"232700", "省十里丰监狱":"0", "合肥":"340100", "青岛":"370200", "万盛经开区":"0", "荣昌区":"500153", "巴彦淖尔":"150800", "丰都":"", "张掖":"620700", "张家界":"430800", "榆林":"610800", "琼海市":"469002", "待明确地区":"0", "奉贤区":"310120", "抚顺市":"210400", "兵团第六师五家渠市":"0", "澳门":"", "延边":"222400", "通州区":"110112", "西宁市":"630100", "吉林":"0", "福州":"350100", "德宏":"533100", "张家口":"130700", "威海":"371000", "第九师":"-1", "潮州":"445100", "株洲":"430200", "顺义区":"110113", "五家渠":"659004", "吉林市":"220200", "池州":"341700", "临夏":"622900", "肇庆":"441200", "防城港":"450600", "东莞":"441900", "西青区":"120111", "佳木斯":"230800", "宿松":"0", "南开区":"120104", "江北区":"500105", "楚雄":"532301", "长宁区":"310105", "固原":"640400", "兵团第四师":"0", "兴安盟乌兰浩特":"", "滨海新区":"120116", "郴州":"431000", "第九师":"0", "江津区":"500116", "临汾市":"", "惠州":"441300", "平凉":"620800", "龙岩":"350800", "石景山区":"110107", "三明":"350400", "大庆":"230600", "外地来京":"0", "莆田":"350300", "儋州":"460400", "雅安":"511800", "安阳（含滑县）":"0", "怀柔区":"110116", "上饶":"361100", "门头沟":"", "宝山区":"310113", "石柱":"", "四平":"220300", "北辰区":"120113", "绍兴":"330600", "西宁市":"", "石家庄":"130100", "巩义":"", "鄂尔多斯东胜区":"", "襄阳":"420600", "韶关":"440200", "临沧":"530900", "长春":"220100", "涪陵区":"500102", "安庆":"340800", "徐汇区":"310104", "西宁":"630100", "红河":"532500", "拉萨":"540100", "鹤岗":"230400"}
class ConnectState(Enum):
    connected = 0
    connecting = 1
    disconnected = 2
class Data():
    continentName=""
    continentEnglishName=""
    countryName=""
    countryEnglishName=""
    provinceName=""
    provinceEnglishName=""
    province_zipCode=""
    province_confirmedCount=""
    province_suspectedCount=""
    province_curedCount=""
    province_deadCount=""
    updateTime=""
    cityName=""
    cityEnglishName=""
    city_zipCode=""
    city_confirmedCount=""
    city_suspectedCount=""
    city_curedCount=""
    city_deadCount=""

class Publish(QWidget):
    data = Data()
    client1 = mqtt_client.Client()
    def __init__(self):
        super(Publish, self).__init__()

        # 连接信息，会根据设置界面的输入更新
        self.connect_info = {'address': '47.100.X.X', 'port': '1883', 'username': '', 'password': ''}
        # 订阅获取的信息
        self.connect_state = ConnectState.disconnected
        self.connect_btn = QPushButton('连接')
        self.disconnect_btn = QPushButton('断开')
        self.cancel_btn = QPushButton('取消')
        self.loading = QLabel()
        self.setting_btn = QPushButton()
        self.setting_widget = Setting(self.connect_info)
        self.light = QLabel()
        self.publish_edit = QComboBox()
        self.publish_btn = QPushButton('发布')
        self.import_btn = QPushButton('导入')

        self.lineEdit_countryName = QtWidgets.QLineEdit()
        self.lineEdit_provinceName = QtWidgets.QLineEdit()
        self.lineEdit_province_confirmedCount = QtWidgets.QLineEdit()
        self.lineEdit_province_suspectedCount = QtWidgets.QLineEdit()
        self.lineEdit_province_curedCount = QtWidgets.QLineEdit()
        self.lineEdit_province_deadCount = QtWidgets.QLineEdit()
        self.updateTime = QtWidgets.QDateTimeEdit()

        self.lineEdit_cityName = QtWidgets.QLineEdit()
        self.lineEdit_city_confirmedCount = QtWidgets.QLineEdit()
        self.lineEdit_city_suspectedCount = QtWidgets.QLineEdit()
        self.lineEdit_city_curedCount = QtWidgets.QLineEdit()
        self.lineEdit_city_deadCount = QtWidgets.QLineEdit()
        self.label_1 = QtWidgets.QLabel()
        self.label_1.setText("countryName                ")
        self.label_2 = QtWidgets.QLabel()
        self.label_2.setText("provinceName               ")
        self.label_3 = QtWidgets.QLabel()
        self.label_3.setText("province_confirmedCount    ")
        self.label_4 = QtWidgets.QLabel()
        self.label_4.setText("province_suspectedCount    ")
        self.label_5 = QtWidgets.QLabel()
        self.label_5.setText("province_curedCount        ")
        self.label_6 = QtWidgets.QLabel()
        self.label_6.setText("province_deadCount         ")
        self.label_7 = QtWidgets.QLabel()
        self.label_7.setText("updateTime")
        self.label_8 = QtWidgets.QLabel()
        self.label_8.setText("cityName                   ")
        self.label_9 = QtWidgets.QLabel()
        self.label_9.setText("city_confirmedCount        ")
        self.label_10 = QtWidgets.QLabel()
        self.label_10.setText("city_suspectedCount        ")
        self.label_11 = QtWidgets.QLabel()
        self.label_11.setText("city_curedCount            ")
        self.label_12 = QtWidgets.QLabel()
        self.label_12.setText("city_deadCount             ")


        self.init_ui()
        self.init_slot()

    def init_ui(self):
        self.setting_btn.setFixedSize(25, 25)
        self.setting_btn.setFlat(True)
        self.setting_btn.setIcon(QIcon('pic/setting.png'))
        self.setting_btn.setStyleSheet('QPushButton{border:none;} '
                                       'QPushButton:hover{background-color: rgb(224,224,224);}')
        set_button_style(self.connect_btn, 'blue')
        set_button_style(self.disconnect_btn, 'white')
        self.disconnect_btn.setEnabled(False)
        set_button_style(self.cancel_btn, 'white')
        self.cancel_btn.setVisible(False)
        movie = QMovie('pic/loading.gif')
        movie.start()
        self.loading.setMovie(movie)
        self.loading.setVisible(False)
        self.light.setFixedSize(25, 25)
        self.light.setPixmap(QPixmap('pic/red.png'))
        set_button_style(self.publish_btn, 'blue')
        set_button_style(self.import_btn, 'blue')
        self.publish_edit.setFixedWidth(300)
        self.publish_edit.setEditable(True)
        self.publish_edit.setEnabled(False)
        self.publish_btn.setEnabled(False)
        self.import_btn.setEnabled(False)
        horizontal_line = QFrame(self)
        horizontal_line.setFrameShadow(QFrame.Plain)
        vertical_line = QFrame(self)
        vertical_line.setFrameShadow(QFrame.Plain)

        connect_control_layout = QHBoxLayout()
        connect_control_layout.addWidget(self.publish_edit)
        connect_control_layout.addWidget(self.publish_btn)
        connect_control_layout.addWidget(self.import_btn)
        connect_control_layout.addWidget(self.setting_btn)
        connect_control_layout.addWidget(self.connect_btn)
        connect_control_layout.addWidget(self.disconnect_btn)
        connect_control_layout.addStretch()
        connect_control_layout.addWidget(self.loading)
        connect_control_layout.addWidget(self.cancel_btn)
        connect_control_layout.addWidget(self.light)


        countryName_layout = QHBoxLayout()
        countryName_layout.addWidget(self.label_1)
        countryName_layout.addWidget(self.lineEdit_countryName)

        provinceName_layout = QHBoxLayout()
        provinceName_layout.addWidget(self.label_2)
        provinceName_layout.addWidget(self.lineEdit_provinceName)

        province_confirmedCount_layout = QHBoxLayout()
        province_confirmedCount_layout.addWidget(self.label_3)
        province_confirmedCount_layout.addWidget(self.lineEdit_province_confirmedCount)

        province_suspectedCount_layout = QHBoxLayout()
        province_suspectedCount_layout.addWidget(self.label_4)
        province_suspectedCount_layout.addWidget(self.lineEdit_province_suspectedCount)

        province_curedCount_layout = QHBoxLayout()
        province_curedCount_layout.addWidget(self.label_5)
        province_curedCount_layout.addWidget(self.lineEdit_province_curedCount)

        province_deadCount_layout = QHBoxLayout()
        province_deadCount_layout.addWidget(self.label_6)
        province_deadCount_layout.addWidget(self.lineEdit_province_deadCount)

        updateTime_layout = QHBoxLayout()

        updateTime_layout.addWidget(self.label_7,375)
        updateTime_layout.addWidget(self.updateTime,1000)

        cityName_layout = QHBoxLayout()
        cityName_layout.addWidget(self.label_8)
        cityName_layout.addWidget(self.lineEdit_cityName)

        city_confirmedCount_layout = QHBoxLayout()
        city_confirmedCount_layout.addWidget(self.label_9)
        city_confirmedCount_layout.addWidget(self.lineEdit_city_confirmedCount)

        city_suspectedCount_layout = QHBoxLayout()
        city_suspectedCount_layout.addWidget(self.label_10)
        city_suspectedCount_layout.addWidget(self.lineEdit_city_suspectedCount)

        city_curedCount_layout = QHBoxLayout()
        city_curedCount_layout.addWidget(self.label_11)
        city_curedCount_layout.addWidget(self.lineEdit_city_curedCount)

        city_deadCount_layout = QHBoxLayout()
        city_deadCount_layout.addWidget(self.label_12)
        city_deadCount_layout.addWidget(self.lineEdit_city_deadCount)

        # publish_control_layout = QHBoxLayout()
        # publish_control_layout.addWidget(self.publish_edit)
        # publish_control_layout.addWidget(self.publish_btn)
        bottom_layout = QVBoxLayout()
        bottom_layout.addLayout(countryName_layout)
        bottom_layout.addLayout(provinceName_layout)
        bottom_layout.addLayout(province_confirmedCount_layout)
        bottom_layout.addLayout(province_suspectedCount_layout)
        bottom_layout.addLayout(province_curedCount_layout)
        bottom_layout.addLayout(province_deadCount_layout)
        bottom_layout.addLayout(updateTime_layout)
        bottom_layout.addLayout(cityName_layout)
        bottom_layout.addLayout(city_confirmedCount_layout)
        bottom_layout.addLayout(city_suspectedCount_layout)
        bottom_layout.addLayout(city_curedCount_layout)
        bottom_layout.addLayout(city_deadCount_layout)

        layout = QVBoxLayout()
        layout.addLayout(connect_control_layout)
        layout.addLayout(bottom_layout)

        self.setLayout(layout)
        self.completer_countryName()
        self.completer_provinceName()
        self.completer_cityName()

    def completer_countryName(self):
        self.completer__1=QCompleter(country_list)
        self.completer__1.setFilterMode(Qt.MatchContains)
        self.completer__1.setCompletionMode(QCompleter.PopupCompletion)
        self.lineEdit_countryName.setCompleter(self.completer__1)

    def completer_provinceName(self):
        self.completer__1=QCompleter(province_list)
        self.completer__1.setFilterMode(Qt.MatchContains)
        self.completer__1.setCompletionMode(QCompleter.PopupCompletion)
        self.lineEdit_provinceName.setCompleter(self.completer__1)

    def completer_cityName(self):
        self.completer__1=QCompleter(city_list)
        self.completer__1.setFilterMode(Qt.MatchContains)
        self.completer__1.setCompletionMode(QCompleter.PopupCompletion)
        self.lineEdit_cityName.setCompleter(self.completer__1)

    def init_slot(self):
        self.connect_btn.clicked.connect(self.click_connect_btn)
        self.disconnect_btn.clicked.connect(self.click_disconnect_btn)
        self.cancel_btn.clicked.connect(self.click_cancel_btn)
        self.publish_btn.clicked.connect(self.click_publish_btn)
        self.import_btn.clicked.connect(self.click_import_btn)
        self.publish_edit.editTextChanged.connect(self.publish_edit_changed)
        # self.publish_list.itemSelectionChanged.connect(self.update_info_list)
        # self.info_list.itemSelectionChanged.connect(self.update_info_display)
        self.setting_btn.clicked.connect(self.setting_btn_clicked)

    def click_connect_btn(self):
        self.connect_btn.setEnabled(False)
        self.loading.setVisible(True)
        self.cancel_btn.setVisible(True)
        self.connect()

    def click_disconnect_btn(self):
        # disconnected,这里需要取消连接
        global connect_state
        connect_state = ConnectState.disconnected
        self.connect_btn.setEnabled(True)
        self.setting_btn.setEnabled(True)
        self.disconnect_btn.setEnabled(False)
        self.light.setPixmap(QPixmap('pic/red.png'))
        self.publish_btn.setEnabled(False)
        self.import_btn.setEnabled(False)
        self.publish_edit.clear()
        self.publish_edit.clearEditText()
        self.publish_edit.setEnabled(False)

    def on_disconnect(client,userdata,rc):
        if rc==0:
            print("disconnect")

    def click_cancel_btn(self):
        self.connect_btn.setEnabled(True)
        self.setting_btn.setEnabled(True)
        self.connect_state = ConnectState.disconnected

    def click_import_btn(self):
        print("import")
        name = self.publish_edit.currentText()
        self.import_btn.setEnabled(False)
        root = tk.Tk()
        root.withdraw()
        Filepath = filedialog.askopenfilename()  # 获得选择好的文件
        data = pd.read_csv(Filepath)
        # print(data.shape[0])
        row = data.shape[0]
        count = 0;
        while True:
            if  pd.isnull(data.iloc[count]['continentName']):
                self.data.continentName = ''
            else:
                self.data.continentName = data.iloc[count]['continentName']
            if  pd.isnull(data.iloc[count]['continentEnglishName']):
                self.data.continentEnglishName = ''
            else:
                self.data.continentEnglishName = data.iloc[count]['continentEnglishName']
            if  pd.isnull(data.iloc[count]['countryName']):
                self.data.countryName = ''
            else:
                self.data.countryName = data.iloc[count]['countryName']
            if  pd.isnull(data.iloc[count]['countryEnglishName']):
                self.data.countryEnglishName = ''
            else:
                self.data.countryEnglishName = data.iloc[count]['countryEnglishName']
            if  pd.isnull(data.iloc[count]['provinceName']):
                self.data.provinceName = ''
            else:
                self.data.provinceName = data.iloc[count]['provinceName']
            if  pd.isnull(data.iloc[count]['provinceEnglishName']):
                self.data.provinceEnglishName = ''
            else:
                self.data.provinceEnglishName = data.iloc[count]['provinceEnglishName']
            if  pd.isnull(data.iloc[count]['province_zipCode']):
                self.data.province_zipCode = ''
            else:
                self.data.province_zipCode = int(data.iloc[count]['province_zipCode'])
            if  pd.isnull(data.iloc[count]['province_confirmedCount']):
                self.data.province_confirmedCount = ''
            else:
                self.data.province_confirmedCount = int(data.iloc[count]['province_confirmedCount'])
            if  pd.isnull(data.iloc[count]['province_suspectedCount']):
                self.data.province_suspectedCount = ''
            else:
                self.data.province_suspectedCount = int(data.iloc[count]['province_suspectedCount'])
            if  pd.isnull(data.iloc[count]['province_curedCount']):
                self.data.province_curedCount = ''
            else:
                self.data.province_curedCount = int(data.iloc[count]['province_curedCount'])
            if  pd.isnull(data.iloc[count]['province_deadCount']):
                self.data.province_deadCount = ''
            else:
                self.data.province_deadCount = int(data.iloc[count]['province_deadCount'])
            if  pd.isnull(data.iloc[count]['updateTime']):
                self.data.updateTime = ''
            else:
                self.data.updateTime = data.iloc[count]['updateTime']
            if  pd.isnull(data.iloc[count]['cityName']):
                self.data.cityName = ''
            else:
                self.data.cityName = data.iloc[count]['cityName']
            if  pd.isnull(data.iloc[count]['cityEnglishName']):
                self.data.cityEnglishName = ''
            else:
                self.data.cityEnglishName = data.iloc[count]['cityEnglishName']
            if  pd.isnull(data.iloc[count]['city_zipCode']):
                self.data.city_zipCode = ''
            else:
                self.data.city_zipCode = int(data.iloc[count]['city_zipCode'])
            if  pd.isnull(data.iloc[count]['city_confirmedCount']):
                self.data.city_confirmedCount = ''
            else:
                self.data.city_confirmedCount = int(data.iloc[count]['city_confirmedCount'])
            if  pd.isnull(data.iloc[count]['city_suspectedCount']):
                self.data.city_suspectedCount = ''
            else:
                self.data.city_suspectedCount = int(data.iloc[count]['city_suspectedCount'])
            if  pd.isnull(data.iloc[count]['city_curedCount']):
                self.data.city_curedCount = ''
            else:
                self.data.city_curedCount = int(data.iloc[count]['city_curedCount'])
            if  pd.isnull(data.iloc[count]['city_deadCount']):
                self.data.city_deadCount = ''
            else:
                self.data.city_deadCount = int(data.iloc[count]['city_deadCount'])
            send_data = {
                "continentName": str(self.data.continentName),
                "continentEnglishName": str(self.data.continentEnglishName),
                "countryName": str(self.data.countryName),
                "countryEnglishName": str(self.data.countryEnglishName),
                "provinceName": str(self.data.provinceName),
                "provinceEnglishName": str(self.data.provinceEnglishName),
                "province_zipCode": str(self.data.province_zipCode),
                "province_confirmedCount": str(self.data.province_confirmedCount),
                "province_suspectedCount": str(self.data.province_suspectedCount),
                "province_curedCount": str(self.data.province_curedCount),
                "province_deadCount": str(self.data.province_deadCount),
                "updateTime": str(self.data.updateTime),
                "cityName": str(self.data.cityName),
                "cityEnglishName": str(self.data.cityEnglishName),
                "city_zipCode": str(self.data.city_zipCode),
                "city_confirmedCount": str(self.data.city_confirmedCount),
                "city_suspectedCount": str(self.data.city_suspectedCount),
                "city_curedCount": str(self.data.city_curedCount),
                "city_deadCount": str(self.data.city_deadCount)
            }
            # print(send_data)
            msg = json.dumps(send_data,ensure_ascii=False)
            self.client1.publish(name, msg, 1)
            count=count+1
            # print(count)
            if count >= row:
                break
        self.import_btn.setEnabled(True)
        # 导入文件操作

    def click_publish_btn(self):
        print("click_1")
        name = self.publish_edit.currentText()
        self.publish_btn.setEnabled(False)
        if self.lineEdit_countryName.text()=='':
            self.data.countryName = ''
            self.data.countryEnglishName = ''
        else:
            self.data.countryName = self.lineEdit_countryName.text()
            self.data.countryEnglishName = country_list_E[self.data.countryName]

        if self.lineEdit_countryName.text()=='':
            self.data.continentName = ''
            self.data.continentEnglishName = ''
        else:
            self.data.continentName = continent_list[self.data.countryName]
            self.data.continentEnglishName = continent_list_E[self.data.continentName]

        if self.lineEdit_provinceName.text()=='':
            self.data.provinceName = ''
            self.data.provinceEnglishName = ''
        else:
            self.data.provinceName=self.lineEdit_provinceName.text()
            self.data.provinceEnglishName = province_list_E[self.data.provinceName]

        if self.lineEdit_provinceName.text()=='':
            self.data.province_zipCode=''
        else:
            self.data.province_zipCode=province_zipCode[self.data.provinceName]

        if self.lineEdit_cityName.text()=='':
            self.data.cityName = ''
            self.data.cityEnglishName = ''
        else:
            self.data.cityName=self.lineEdit_cityName.text()
            self.data.cityEnglishName = city_list_E[self.data.cityName]

        if self.lineEdit_cityName.text()=='':
            self.data.city_zipCode=''
        else:
            self.data.city_zipCode=city_zipCode[self.data.cityName]

        if self.lineEdit_province_confirmedCount.text()=='':
            self.data.province_confirmedCount=''
        else:
            self.data.province_confirmedCount = self.lineEdit_province_confirmedCount.text()

        if self.lineEdit_province_suspectedCount.text()=='':
            self.data.province_suspectedCount=''
        else:
            self.data.province_suspectedCount = self.lineEdit_province_suspectedCount.text()

        if self.lineEdit_province_curedCount.text()=='':
            self.data.province_curedCount=''
        else:
            self.data.province_curedCount = self.lineEdit_province_curedCount.text()

        if self.lineEdit_province_curedCount.text()=='':
            self.data.province_curedCount=''
        else:
            self.data.province_deadCount = self.lineEdit_province_curedCount.text()

        if self.lineEdit_province_deadCount.text()=='':
            self.data.province_deadCount=''
        else:
            self.data.province_deadCount = self.lineEdit_province_deadCount.text()
        self.data.updateTime = self.updateTime.dateTime().toString("yyyy-MM-dd HH:mm")
        if self.lineEdit_city_confirmedCount.text()=='':
            self.data.city_confirmedCount=''
        else:
            self.data.city_confirmedCount = self.lineEdit_city_confirmedCount.text()

        if self.lineEdit_city_suspectedCount.text()=='':
            self.data.city_suspectedCount=''
        else:
            self.data.city_suspectedCount = self.lineEdit_city_suspectedCount.text()

        if self.lineEdit_city_curedCount.text()=='':
            self.data.city_curedCount=''
        else:
            self.data.city_curedCount = self.lineEdit_city_curedCount.text()
        if self.lineEdit_city_deadCount.text()=='':
            self.data.city_deadCount=''
        else:
            self.data.city_deadCount = self.lineEdit_city_deadCount.text()
        print("赋值")
        send_data = {
            "continentName": str(self.data.continentName),
            "continentEnglishName": str(self.data.continentEnglishName),
            "countryName": str(self.data.countryName),
            "countryEnglishName": str(self.data.countryEnglishName),
            "provinceName": str(self.data.provinceName),
            "provinceEnglishName": str(self.data.provinceEnglishName),
            "province_zipCode":str(self.data.province_zipCode),
            "province_confirmedCount": str(self.data.province_confirmedCount),
            "province_suspectedCount": str(self.data.province_suspectedCount),
            "province_curedCount": str(self.data.province_curedCount),
            "province_deadCount": str(self.data.province_deadCount),
            "updateTime": str(self.data.updateTime),
            "cityName": str(self.data.cityName),
            "cityEnglishName": str(self.data.cityEnglishName),
            "city_zipCode": str(self.data.city_zipCode),
            "city_confirmedCount": str(self.data.city_confirmedCount),
            "city_suspectedCount": str(self.data.city_suspectedCount),
            "city_curedCount": str(self.data.city_curedCount),
            "city_deadCount": str(self.data.city_deadCount)
        }
        print(send_data)
        msg = json.dumps(send_data, ensure_ascii=False)
        self.client1.publish(name, msg, 1)
        self.publish_btn.setEnabled(True)

    def publish_edit_changed(self):
        self.publish_btn.setEnabled(False)
        self.import_btn.setEnabled(False)
        for i in range(0, self.publish_edit.count()):
            if self.subscribe_edit.currentText() == self.publish_edit.itemText(i):
                return
        if self.publish_edit.currentText() != '':
            self.publish_btn.setEnabled(True)
            self.import_btn.setEnabled(True)

    def connect(self):
        self.connect_state = ConnectState.connecting
        self.loading.setVisible(True)
        self.cancel_btn.setVisible(True)
        thread = Thread(target=self.repeat_connect)
        thread.start()

    def repeat_connect(self):
        while self.connect_state == ConnectState.connecting:
            # 下面这句话替换成根据connect_info进行连接，若连接成功则state为connected
            # 连接后需要有一个线程更新data和subscribe_item，subscribe_item有inc接口用于处理数据数量加一
            client = self.connect_mqtt()
            client.loop_start()
            self.client1 = client
            self.connect_state = ConnectState.connected
            self.cancel_btn.setVisible(False)
            self.loading.setVisible(False)
            self.setting_btn.setEnabled(False)
            if self.connect_state == ConnectState.connected:
                self.light.setPixmap(QPixmap('pic/green.png'))
                self.disconnect_btn.setEnabled(True)
                self.publish_edit.setEnabled(True)

    def connect_mqtt(self):
        print('connect_mqtt')
        def on_connect(client, userdata, flags, rc):
            if rc == 0:
                print("Connected to MQTT Broker!")
            else:
                print("Failed to connect, return code %d\n", rc)

        client = mqtt_client.Client(self.connect_info['username'])
        client.on_connect = on_connect
        client.connect(self.connect_info['address'], int(self.connect_info['port']))
        return client

    # def update_info_list(self):
    #     self.info_list.clear()
    #     selected_list = self.publish_list.selectedItems()
    #     for i in range(0, len(selected_list)):
    #         name = selected_list[i].whatsThis()
    #         info_array = self.data.get(name, [])
    #         for identity in range(0, len(info_array)):
    #             self.add_info_list(name, identity)
    #
    # def add_info_list(self, name, identity):
    #     info_title = QLabel(name)
    #     font = QFont()
    #     font.setBold(QFont.Black)
    #     info_title.setFont(font)
    #     info_id = QLabel(str(identity))
    #     info_id.setFixedSize(50, 20)
    #     info_id.setAlignment(Qt.AlignCenter)
    #     info_id.setStyleSheet('border-radius: 8px; background-color: gray')
    #     layout = QHBoxLayout()
    #     layout.addWidget(info_title, 0, Qt.AlignLeft)
    #     layout.addWidget(info_id, 0, Qt.AlignRight)
    #     w = QWidget()
    #     w.setMinimumHeight(40)
    #     w.setLayout(layout)
    #     list_item = QListWidgetItem()
    #     list_item.setSizeHint(QSize(0, 40))
    #     list_item.setWhatsThis(name+' '+str(identity))
    #     self.info_list.addItem(list_item)
    #     self.info_list.setItemWidget(list_item, w)
    #     return

    # def update_info_display(self):
    #     selected_info = self.info_list.selectedItems()
    #     if len(selected_info) == 0:
    #         self.info_display_title.setText('')
    #         self.info_display_id.setText('')
    #         self.info_display.setText('')
    #     else:
    #         what_list = selected_info[0].whatsThis().split()
    #         name = what_list[0]
    #         identity = what_list[len(what_list)-1]
    #         self.info_display_title.setText(name)
    #         self.info_display_id.setText(identity)
    #         self.info_display.setText(self.data[name][int(identity)])

    def setting_btn_clicked(self):
        self.setting_widget.move(self.mapToGlobal(QPoint(420, 100)))
        self.setting_widget.show()
